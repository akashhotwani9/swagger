{
  "swagger": "2.0",
  "info": {
    "title": "Open Bank Fabric API Documentation",
    "description": "LTI Open Bank Project API Documentation.",
    "version": "v4.0.0"
  },

  "host": "apisandbox.openbankproject.com",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "directLogin": {
      "type": "apiKey",
      "description": "https://github.com/OpenBankProject/OBP-API/wiki/Direct-Login",
      "in": "header",
      "name": "Authorization"
    },
    "gatewayLogin": {
      "type": "apiKey",
      "description": "https://github.com/OpenBankProject/OBP-API/wiki/Gateway-Login",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "directLogin": [],
      "gatewayLogin": []
    }
  ],
  "paths": {
    
    "/obp/v4.0.0/banks": {
      "get": {
        "tags": [
          "OBP API"
         
        ],
        "summary": "Get Banks",
        "security": [
          {
            "directLogin": [],
            "gatewayLogin": []
          }
        ],
        "description": "<p>Get banks on this API instance<br />Returns a list of banks supported on this server:</p><ul><li>ID used as parameter in URLs</li><li>Short and full name of bank</li><li>Logo URL</li><li>Website</li></ul>",
        "operationId": "OBPv4.0.0-getBanks",
        "parameters": [],
        "produces": [
					"application/json"
				],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BanksJSON"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUnknownError"
            }
          }
        }
      }
      
    },
    "/getbanks": {
      "get": {
        "tags": [
          "Experience API"
         
        ],
        "summary": "Get Banks",
        "security": [
          {
          }
        ],
        "description": "<p>Get banks on this API instance<br />Returns a list of banks supported on this server:</p><ul><li>ID used as parameter in URLs</li><li>Short and full name of bank</li><li>Logo URL</li><li>Website</li></ul>",
        "operationId": "getBanks",
        "parameters": [],
        "produces": [
					"application/json"
				],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BanksJSON"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUnknownError"
            }
          }
        }
      }
      
    },
    "/obp/v4.0.0/banks/{BANK_ID}/balances": {
      "get": {
        "tags": [
          "OBP API"
        ],
        "summary": "Get Accounts Balances",
        "security": [
          {
            "directLogin": [],
            "gatewayLogin": []
          }
        ],
        "description": "<p>Get the Balances for the Accounts of the current User at one bank.</p>",
        "operationId": "OBPv3.1.0-getBankAccountsBalances",
        "parameters": [
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
					"application/json"
				],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountsBalancesV310Json"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUnknownError"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/balances": {
      "get": {
        "tags": [
          "Experience API"
        ],
        "summary": "Get Accounts Balances",
        "security": [
          {
            "directLogin": [],
            "gatewayLogin": []
          }
        ],
        "description": "<p>Get the Balances for the Accounts of the current User at one bank.</p>",
        "operationId": "getBankAccountsBalances",
        "parameters": [
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
					"application/json"
				],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountsBalancesV310Json"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUnknownError"
            }
          }
        }
      }
    },
    "/obp/v4.0.0/banks/{BANK_ID}/branches": {
      "get": {
        "tags": [
          "OBP API"
        ],
        "summary": "Get Branches for a Bank",
        "security": [
          {
            "directLogin": [],
            "gatewayLogin": []
          }
        ],
        "description": "<p>Returns information about branches for a single bank specified by BANK_ID including:</p><ul><li>Name</li><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under</li><li>Structured opening hours</li><li>Accessible flag</li><li>Branch Type</li><li>More Info</li></ul><p>Pagination:</p><p>By default, 50 records are returned.</p><p>You can use the url query parameters <em>limit</em> and <em>offset</em> for pagination<br />You can also use the follow url query parameters:</p><ul><li><p>city - string, find Branches those in this city, optional</p></li><li><p>withinMetersOf - number, find Branches within given meters distance, optional</p></li><li>nearLatitude - number, a position of latitude value, cooperate with withMetersOf do query filter, optional</li><li>nearLongitude - number, a position of longitude value, cooperate with withMetersOf do query filter, optional</li></ul><p>note: withinMetersOf, nearLatitude and nearLongitude either all empty or all have value.</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.0.0-getBranches",
        "parameters": [
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
					"application/json"
				],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BranchesJsonV300"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUserNotLoggedIn"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/branches": {
      "get": {
        "tags": [
          "Experience API"
        ],
        "summary": "Get Branches for a Bank",
        "security": [
          {
          
          }
        ],
        "description": "<p>Returns information about branches for a single bank specified by BANK_ID including:</p><ul><li>Name</li><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under</li><li>Structured opening hours</li><li>Accessible flag</li><li>Branch Type</li><li>More Info</li></ul><p>Pagination:</p><p>By default, 50 records are returned.</p><p>You can use the url query parameters <em>limit</em> and <em>offset</em> for pagination<br />You can also use the follow url query parameters:</p><ul><li><p>city - string, find Branches those in this city, optional</p></li><li><p>withinMetersOf - number, find Branches within given meters distance, optional</p></li><li>nearLatitude - number, a position of latitude value, cooperate with withMetersOf do query filter, optional</li><li>nearLongitude - number, a position of longitude value, cooperate with withMetersOf do query filter, optional</li></ul><p>note: withinMetersOf, nearLatitude and nearLongitude either all empty or all have value.</p><p>Authentication is Optional</p>",
        "operationId": "getBranches",
        "parameters": [
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
					"application/json"
				],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BranchesJsonV300"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUserNotLoggedIn"
            }
          }
        }
      }
    },
    "/obp/v4.0.0/banks/{BANK_ID}/accounts": {
      "get": {
        "tags": [
          "OBP API"
        ],
        "summary": "Get Accounts at Bank.",
        "security": [
          {
            "directLogin": [],
            "gatewayLogin": []
          }
        ],
        "description": "<p>Returns the list of accounts at BANK_ID that the user has access to.<br />For each account the API returns the account ID and the views available to the user..<br />Each account must have at least one private View.</p><p>optional request parameters:</p><ul><li>account_type_filter: one or many accountType value, split by comma</li><li>account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE</li></ul><p>whole url example:<br />/banks/BANK_ID/accounts?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv2.0.0-getPrivateAccountsAtOneBank",
        "parameters": [
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
					"application/json"
				],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BasicAccountsJSON"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorBankNotFound"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts": {
      "get": {
        "tags": [
          "Experience API"
        ],
        "summary": "Get Accounts at Bank.",
        "security": [
          {
          }
        ],
        "description": "<p>Returns the list of accounts at BANK_ID that the user has access to.<br />For each account the API returns the account ID and the views available to the user..<br />Each account must have at least one private View.</p><p>optional request parameters:</p><ul><li>account_type_filter: one or many accountType value, split by comma</li><li>account_type_filter_operation: the filter type of account_type_filter, value must be INCLUDE or EXCLUDE</li></ul><p>whole url example:<br />/banks/BANK_ID/accounts?account_type_filter=330,CURRENT+PLUS&amp;account_type_filter_operation=INCLUDE</p><p>Authentication is Mandatory</p>",
        "operationId": "getPrivateAccountsAtOneBank",
        "parameters": [
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
					"application/json"
				],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BasicAccountsJSON"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorBankNotFound"
            }
          }
        }
      }
    },
    "/obp/v4.0.0/banks/{BANK_ID}/atms": {
      "get": {
        "tags": [
          "OBP API"
        ],
        "summary": "Get Bank ATMS",
        "security": [
          {
            "directLogin": [],
            "gatewayLogin": []
          }
        ],
        "description": "<p>Returns information about ATMs for a single bank specified by BANK_ID including:</p><ul><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under</li></ul><p>Pagination:</p><p>By default, 100 records are returned.</p><p>You can use the url query parameters <em>limit</em> and <em>offset</em> for pagination</p><p>Authentication is Optional</p>",
        "operationId": "OBPv3.0.0-getAtms",
        "parameters": [
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
					"application/json"
				],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AtmJsonV300"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUserNotLoggedIn"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/atms": {
      "get": {
        "tags": [
          "Experience API"
        ],
        "summary": "Get Bank ATMS",
        "security": [
          {
          
          }
        ],
        "description": "<p>Returns information about ATMs for a single bank specified by BANK_ID including:</p><ul><li>Address</li><li>Geo Location</li><li>License the data under this endpoint is released under</li></ul><p>Pagination:</p><p>By default, 100 records are returned.</p><p>You can use the url query parameters <em>limit</em> and <em>offset</em> for pagination</p><p>Authentication is Optional</p>",
        "operationId": "getAtms",
        "parameters": [
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
					"application/json"
				],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AtmJsonV300"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUserNotLoggedIn"
            }
          }
        }
      }
    },
    "/obp/v4.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/ACCOUNT/transaction-requests": {
      "post": {
        "tags": [
          "OBP API"
        ],
        "summary": "Create Transaction Request (ACCOUNT)",
        "security": [
          {
            "directLogin": [],
            "gatewayLogin": []
          }
        ],
        "description": "<p>When using ACCOUNT, the payee is set in the request body.</p><p>Money goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p><a href=\"https://apiexplorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://apiexplorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>",
        "operationId": "OBPv4.0.0-createTransactionRequestAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "TransactionRequestBodyJsonV200 object that needs to be added ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionRequestBodyJsonV200"
            }
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
					"application/json"
				],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionRequestWithChargeJSON210"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUserNotLoggedIn"
            }
          }
        }
      }
    },
    "banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/ACCOUNT/transaction-requests": {
      "post": {
        "tags": [
          "Experience API"
        ],
        "summary": "Create Transaction Request (ACCOUNT)",
        "security": [
          {
           
          }
        ],
        "description": "<p>When using ACCOUNT, the payee is set in the request body.</p><p>Money goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p><p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response.<br />This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to ACCOUNT. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p><a href=\"https://apiexplorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate\">https://apiexplorer.openbankproject.com/more?version=OBPv4.0.0&amp;list-all-banks=false&amp;core=&amp;psd2=&amp;obwg=#OBPv2_2_0-getCurrentFxRate</a></p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>",
        "operationId": "createTransactionRequestAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "TransactionRequestBodyJsonV200 object that needs to be added ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionRequestBodyJsonV200"
            }
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
					"application/json"
				],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionRequestWithChargeJSON210"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUserNotLoggedIn"
            }
          }
        }
      }
    },
    "/obp/v4.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types": {
      "get": {
        "tags": [
          "OBP API"
        ],
        "summary": "Get Transaction Request Types for Account",
        "security": [
          {
            "directLogin": [],
            "gatewayLogin": []
          }
        ],
        "description": "<p>Returns the Transation Request Types that the account specified by ACCOUNT_ID and view specified by VIEW_ID has access to.</p><p>These are the ways this API Server can create a Transaction via a Transaction Request<br />(as opposed to Transaction Types which include external types too e.g. for Transactions created by core banking etc.)</p><p>A Transaction Request Type internally determines:</p><ul><li>the required Transaction Request &lsquo;body&rsquo; i.e. fields that define the &lsquo;what&rsquo; and &lsquo;to&rsquo; of a Transaction Request,</li><li>the type of security challenge that may be be raised before the Transaction Request proceeds, and</li><li>the threshold of that challenge.</li></ul><p>For instance in a &lsquo;SANDBOX_TAN&rsquo; Transaction Request, for amounts over 1000 currency units, the user must supply a positive integer to complete the Transaction Request and create a Transaction.</p><p>This approach aims to provide only one endpoint for initiating transactions, and one that handles challenges, whilst still allowing flexibility with the payload and internal logic.</p>",
        "operationId": "OBPv1.4.0-getTransactionRequestTypes",
        "parameters": [
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
					"application/json"
				],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionRequestTypesJsonV140"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUserNotLoggedIn"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types": {
      "get": {
        "tags": [
          "Experience API"
        ],
        "summary": "Get Transaction Request Types for Account",
        "security": [
          {
          
          }
        ],
        "description": "<p>Returns the Transation Request Types that the account specified by ACCOUNT_ID and view specified by VIEW_ID has access to.</p><p>These are the ways this API Server can create a Transaction via a Transaction Request<br />(as opposed to Transaction Types which include external types too e.g. for Transactions created by core banking etc.)</p><p>A Transaction Request Type internally determines:</p><ul><li>the required Transaction Request &lsquo;body&rsquo; i.e. fields that define the &lsquo;what&rsquo; and &lsquo;to&rsquo; of a Transaction Request,</li><li>the type of security challenge that may be be raised before the Transaction Request proceeds, and</li><li>the threshold of that challenge.</li></ul><p>For instance in a &lsquo;SANDBOX_TAN&rsquo; Transaction Request, for amounts over 1000 currency units, the user must supply a positive integer to complete the Transaction Request and create a Transaction.</p><p>This approach aims to provide only one endpoint for initiating transactions, and one that handles challenges, whilst still allowing flexibility with the payload and internal logic.</p>",
        "operationId": "getTransactionRequestTypes",
        "parameters": [
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
					"application/json"
				],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionRequestTypesJsonV140"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUserNotLoggedIn"
            }
          }
        }
      }
    },
    "/{from_curr}/{to_curr}": {
      "get": {
        "tags": [
          "Experience API"
        ],
        "summary": "Get Currency Exchange Rates",
        "security": [
          {
          
          }
        ],
        "description": "<p>This API returns the realtime exchange rate for any pair of digital currency (e.g., Bitcoin) and physical currency (e.g., USD). Data returned for physical currency (Forex) pairs also include realtime bid and ask prices.</p>",
        "operationId": "getExchangeRates",
        "produces": [
					"application/json"
				],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CurrencyExchangeJSON"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUserNotLoggedIn"
            }
          }
        }
      }
    },
    "/Saving": {
      "get": {
        "tags": [
          "Experience API"
        ],
        "summary": "Get Savings",
        "security": [
          {
          
          }
        ],
        "description": "<p>This API returns Saving data of user from his Credits and Debits Transactions. It shows monthly wise Savings.</p>",
        "operationId": "getSavings",
        "produces": [
					"application/json"
				],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SavingsJSON"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorUserNotLoggedIn"
            }
          }
        }
      }
    }
    
  },
  
  "definitions": {
    "SavingsJSON": {
      "required": [
        "01",
        "02",
        "03",
        "04",
        "05",
        "06",
        "07",
        "08",
        "09",
        "10",
        "11",
        "12"
      ],
      "properties": {
        "01":{ "type": "string",
          "example": "37779.27"
        },
        "02":{ 
          "type": "string",
          "example": "39706.86"
        },
        "03":{ 
          "type": "string",
          "example": "35729.74"
        },
        "04":{ 
          "type": "string",
          "example": "39831.05"
        },
        "05":{ 
          "type": "string",
          "example": "35346.03"
        },
        "06":{ 
          "type": "string",
          "example": "38142.07"
        },
        "07":{ 
          "type": "string",
          "example": "34988.96"
        },
        "08":{ 
          "type": "string",
          "example": "35354.93"
        },
        "09":{ 
          "type": "string",
          "example": "37471.47"
        },
        "10":{ 
          "type": "string",
          "example": "33494.94"
        },
        "11":{
           "type": "string",
          "example": "37208.47"
        },
        "12":{ 
          "type": "string",
          "example": "34935.66"
        }

      }
    },
    "CurrencyExchangeJSON": {
      "required": [
        "Realtime Currency Exchange Rate"
      ],
      "properties": {
        "Realtime Currency Exchange Rate": {
          "$ref": "#/definitions/RealtimeCurrencyJSON"
        }
      }
    },
    "RealtimeCurrencyJSON": {
      "required": [
        "1. From_Currency Code",
        "2. From_Currency Name",
        "3. To_Currency Code",
        "4. To_Currency Name",
        "5. Exchange Rate",
        "6. Last Refreshed",
        "7. Time Zone",
        "8. Bid Price",
        "9. Ask Price"
      ],
      "properties": {
        "1. From_Currency Code": {
          "type": "string",
          "example": "USD"
        },
        "2. From_Currency Name":{
          "type": "string",
          "example": "United States Dollar"
        },
        "3. To_Currency Code":{
          "type": "string",
          "example": "JPY"
        },
        "4. To_Currency Name":{
          "type": "string",
          "example": "Japanese Yen"
        },
        "5. Exchange Rate":{
          "type": "string",
          "example": "107.45700000"
        },
        "6. Last Refreshed":{
          "type": "string",
          "example": "2020-04-15 15:24:15"
        },
        "7. Time Zone":{
          "type": "string",
          "example": "UTC"
        },
        "8. Bid Price":{
          "type": "string",
          "example": "107.45700000"
        },
        "9. Ask Price":{
          "type": "string",
          "example": "107.46200000"
        }

      }
    },
    "ErrorDataImportDisabled": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-00002: Data import is disabled for this API instance."
        }
      }
    },
    "ErrorTransactionDisabled": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-00003: Transaction Requests is disabled in this API instance."
        }
      }
    },
    "ErrorServerAddDataError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-00004: Server error: could not add message"
        }
      }
    },
    "ErrorFirehoseViewsNotAllowedOnThisInstance": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-00009: Firehose views not allowed on this instance. Please set allow_firehose_views = true in props files. "
        }
      }
    },
    "ErrorInvalidJsonFormat": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10001: Incorrect json format."
        }
      }
    },
    "ErrorInvalidNumber": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10002: Invalid Number. Could not convert value to a number."
        }
      }
    },
    "ErrorInvalidISOCurrencyCode": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. "
        }
      }
    },
    "ErrorFXCurrencyCodeCombinationsNotSupported": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10004: ISO Currency code combination not supported for FX. Please modify the FROM_CURRENCY_CODE or TO_CURRENCY_CODE. "
        }
      }
    },
    "ErrorInvalidDateFormat": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10005: Invalid Date Format. Could not convert value to a Date."
        }
      }
    },
    "ErrorIncorrectRoleName": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10007: Incorrect Role name: "
        }
      }
    },
    "ErrorAllowedValuesAre": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10015: Allowed values are: "
        }
      }
    },
    "ErrorInvalidFilterParameterFormat": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10016: Incorrect filter Parameters in URL. "
        }
      }
    },
    "ErrorInvalidUrl": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10017: Incorrect URL Format. "
        }
      }
    },
    "ErrorFilterSortDirectionError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10023: obp_sort_direction parameter can only take two values: DESC or ASC!"
        }
      }
    },
    "ErrorFilterOffersetError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10024: wrong value for obp_offset parameter. Please send a positive integer (=>0)!"
        }
      }
    },
    "ErrorFilterLimitError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10025: wrong value for obp_limit parameter. Please send a positive integer (=>1)!"
        }
      }
    },
    "ErrorFilterDateFormatError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-10026: Failed to parse date string. Please use this format yyyy-MM-dd'T'HH:mm:ss.SSS'Z'!"
        }
      }
    },
    "ErrorUserNotLoggedIn": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20001: User not logged in. Authentication is required!"
        }
      }
    },
    "ErrorUserNotFoundById": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20005: User not found. Please specify a valid value for USER_ID."
        }
      }
    },
    "ErrorUserHasMissingRoles": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20006: User is missing one or more roles: "
        }
      }
    },
    "ErrorUserNotFoundByEmail": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20007: User not found by email."
        }
      }
    },
    "ErrorInvalidConsumerId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20014: Invalid Consumer ID. Please specify a valid value for CONSUMER_ID."
        }
      }
    },
    "ErrorUserNoPermissionAccessView": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID."
        }
      }
    },
    "ErrorUserNoOwnerView": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20019: User does not have access to owner view. "
        }
      }
    },
    "ErrorConsumerNotFoundById": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20024: Consumer not found. Please specify a valid value for CONSUMER_ID."
        }
      }
    },
    "ErrorUserNotFoundByUsername": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20027: User not found by username."
        }
      }
    },
    "ErrorUserNotSuperAdmin": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20050: Current User is not a Super Admin!"
        }
      }
    },
    "ErrorInvalidAmount": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20054: Invalid amount. Please specify a valid value for amount."
        }
      }
    },
    "ErrorUserNotFoundByUserId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-20057: User not found by userId."
        }
      }
    },
    "ErrorBankNotFound": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30001: Bank not found. Please specify a valid value for BANK_ID."
        }
      }
    },
    "ErrorCustomerNotFoundByCustomerId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30046: Customer not found. Please specify a valid value for CUSTOMER_ID."
        }
      }
    },
    "ErrorAccountNotFound": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID."
        }
      }
    },
    "ErrorViewNotFound": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID"
        }
      }
    },
    "ErrorCustomerNumberAlreadyExists": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30006: Customer Number already exists. Please specify a different value for BANK_ID or CUSTOMER_NUMBER."
        }
      }
    },
    "ErrorCustomerAlreadyExistsForUser": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30007: The User is already linked to a Customer at the bank specified by BANK_ID"
        }
      }
    },
    "ErrorUserCustomerLinksNotFoundForUser": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30008: User Customer Link not found by USER_ID"
        }
      }
    },
    "ErrorAtmNotFoundByAtmId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30009: ATM not found. Please specify a valid value for ATM_ID."
        }
      }
    },
    "ErrorProductNotFoundByProductCode": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30011: Product not found. Please specify a valid value for PRODUCT_CODE."
        }
      }
    },
    "ErrorCounterpartyAlreadyExists": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30014: Counterparty already exists. Please specify a different value for BANK_ID or ACCOUNT_ID or VIEW_ID or NAME."
        }
      }
    },
    "ErrorCounterpartyNotFoundByCounterpartyId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30017: Counterparty not found. Please specify a valid value for COUNTERPARTY_ID."
        }
      }
    },
    "ErrorBankAccountNotFound": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. "
        }
      }
    },
    "ErrorConsumerNotFoundByConsumerId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30019: Consumer not found. Please specify a valid value for CONSUMER_ID."
        }
      }
    },
    "ErrorNoViewPermission": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30022: The current view does not have the permission: "
        }
      }
    },
    "ErrorUpdateConsumerError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30023: Cannot update Consumer "
        }
      }
    },
    "ErrorCreateConsumerError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30024: Could not create Consumer "
        }
      }
    },
    "ErrorCreateUserCustomerLinksError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30025: Could not create user_customer_links "
        }
      }
    },
    "ErrorGetTopApisError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30042: Could not get the top apis from database.  "
        }
      }
    },
    "ErrorGetMetricsTopConsumersError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30045: Could not get the top consumers from database.  "
        }
      }
    },
    "ErrorCreateUserAuthContextError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30053: Could not insert the UserAuthContext"
        }
      }
    },
    "ErrorMeetingNotFound": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30104: Meeting not found."
        }
      }
    },
    "ErrorInvalidAccountBalanceCurrency": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30105: Invalid Balance Currency."
        }
      }
    },
    "ErrorInvalidAccountBalanceAmount": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30106: Invalid Balance Amount."
        }
      }
    },
    "ErrorInvalidUserId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30107: Invalid User Id."
        }
      }
    },
    "ErrorInitialBalanceMustBeZero": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30109: Initial Balance of Account must be Zero (0)."
        }
      }
    },
    "ErrorInvalidAccountIdFormat": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255."
        }
      }
    },
    "ErrorInvalidBankIdFormat": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/'-'/'.'/'_', the length should be smaller than 255."
        }
      }
    },
    "ErrorInvalidAccountInitialBalance": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30112: Invalid Number. Initial balance must be a number, e.g 1000.00"
        }
      }
    },
    "ErrorEntitlementIsBankRole": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30205: This entitlement is a Bank Role. Please set bank_id to a valid bank id."
        }
      }
    },
    "ErrorEntitlementIsSystemRole": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30206: This entitlement is a System Role. Please set bank_id to empty string."
        }
      }
    },
    "ErrorInvalidStrongPasswordFormat": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30207: Invalid Password Format. Your password should EITHER be at least 10 characters long and contain mixed numbers and both upper and lower case letters and at least one special character, OR be longer than 16 characters."
        }
      }
    },
    "ErrorAccountIdAlreadyExists": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30208: Account_ID already exists at the Bank."
        }
      }
    },
    "ErrorInsufficientAuthorisationToCreateBranch": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30209: Insufficient authorisation to Create Branch. You do not have the role CanCreateBranch."
        }
      }
    },
    "ErrorInsufficientAuthorisationToDeleteBranch": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30218: Insufficient authorisation to Create Branch. You do not have the role CanCreateBranch."
        }
      }
    },
    "ErrorInsufficientAuthorisationToCreateBank": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30210: Insufficient authorisation to Create Bank. You do not have the role CanCreateBank."
        }
      }
    },
    "ErrorEntitlementNotFound": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30212: EntitlementId not found"
        }
      }
    },
    "ErrorEntitlementRequestAlreadyExists": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30214: Entitlement Request already exists for the user."
        }
      }
    },
    "ErrorEntitlementRequestCannotBeAdded": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30217: Entitlement Request cannot be added."
        }
      }
    },
    "ErrorEntitlementAlreadyExists": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-30216: Entitlement already exists for the user."
        }
      }
    },
    "ErrorInvalidTransactionRequestType": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE"
        }
      }
    },
    "ErrorInsufficientAuthorisationToCreateTransactionRequest": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because you don't have access to the owner view of the from account or you don't have access to canCreateAnyTransactionRequest."
        }
      }
    },
    "ErrorInvalidTransactionRequestCurrency": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40003: Transaction Request Currency must be the same as From Account Currency."
        }
      }
    },
    "ErrorInsufficientAuthorisationToCreateTransactionType": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40005: Insufficient authorisation to Create Transaction Type offered by the bank. The Request could not be created because you don't have access to CanCreateTransactionType."
        }
      }
    },
    "ErrorNotPositiveAmount": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40008: Can't send a payment with a value of 0 or less."
        }
      }
    },
    "ErrorTransactionRequestTypeHasChanged": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40009: The TRANSACTION_REQUEST_TYPE has changed."
        }
      }
    },
    "ErrorInvalidTransactionRequesChallengeId": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40010: Invalid Challenge Id. Please specify a valid value for CHALLENGE_ID."
        }
      }
    },
    "ErrorTransactionRequestStatusNotInitiated": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40011: Transaction Request Status is not INITIATED."
        }
      }
    },
    "ErrorAllowedAttemptsUsedUp": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40014: Sorry, you've used up your allowed attempts. "
        }
      }
    },
    "ErrorTransactionRequestsNotEnabled": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-40018: Sorry, Transaction Requests are not enabled in this API instance."
        }
      }
    },
    "ErrorUnknownError": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-50000: Unknown Error."
        }
      }
    },
    "ErrorInvalidConnectorResponse": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-50200: Connector cannot return the data we requested."
        }
      }
    },
    "ErrorInvalidConnectorResponseForGetCheckbookOrdersFuture": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-50211: Connector did not return the set of check book."
        }
      }
    },
    "ErrorInvalidConnectorResponseForGetStatusOfCreditCardOrderFuture": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-50212: Connector did not return the set of status of credit card."
        }
      }
    },
    "ErrorGetTransactionRequestsException": {
      "properties": {
        "message": {
          "type": "string",
          "example": "OBP-60010: Get Transaction Requests Exception. "
        }
      }
    },
    "ProductAttributeResponseWithoutBankIdJson": {
      "required": [
        "name",
        "product_attribute_id",
        "product_code",
        "type",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "OVERDRAFT_START_DATE"
        },
        "product_attribute_id": {
          "type": "string",
          "example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        },
        "product_code": {
          "type": "string",
          "example": "saving1"
        },
        "type": {
          "type": "string",
          "example": "DATE_WITH_DAY"
        },
        "value": {
          "type": "string",
          "example": "2012-04-23"
        }
      }
    },
    "AkkaJSON": {
      "required": [
        "ports",
        "log_level"
      ],
      "properties": {
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortJSON"
          }
        },
        "log_level": {
          "type": "string",
          "example": "Debug"
        },
        "remote_data_secret_matched": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "AddCustomerMessageJson": {
      "required": [
        "message",
        "from_department",
        "from_person"
      ],
      "properties": {
        "message": {
          "type": "string",
          "example": "String"
        },
        "from_department": {
          "type": "string",
          "example": "String"
        },
        "from_person": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "TransactionRequestBodyFreeFormJSON": {
      "required": [
        "value",
        "description"
      ],
      "properties": {
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "description": {
          "type": "string",
          "example": "This is a FREE_FORM Transaction Request"
        }
      }
    },
    "BanksJSON": {
      "required": [
        "banks"
      ],
      "properties": {
        "banks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BankJSON"
          }
        }
      }
    },
    "PhysicalCardsJsonV310": {
      "required": [
        "cards"
      ],
      "properties": {
        "cards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhysicalCardJsonV310"
          }
        }
      }
    },
    "PostCustomerAddressJsonV310": {
      "required": [
        "city",
        "line_2",
        "state",
        "tags",
        "postcode",
        "county",
        "country_code",
        "status",
        "line_3",
        "line_1"
      ],
      "properties": {
        "city": {
          "type": "string",
          "example": "Berlin"
        },
        "line_2": {
          "type": "string",
          "example": "The Place"
        },
        "state": {
          "type": "string",
          "example": "Brandenburg"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "postcode": {
          "type": "string",
          "example": "13359"
        },
        "county": {
          "type": "string",
          "example": ""
        },
        "country_code": {
          "type": "string",
          "example": "DE"
        },
        "status": {
          "type": "string",
          "example": "OK"
        },
        "line_3": {
          "type": "string",
          "example": "The Hill"
        },
        "line_1": {
          "type": "string",
          "example": "No 1 the Road"
        }
      }
    },
    "AmountOfMoneyJsonV121": {
      "required": [
        "currency",
        "amount"
      ],
      "properties": {
        "currency": {
          "type": "string",
          "example": "EUR"
        },
        "amount": {
          "type": "string",
          "example": "10"
        }
      }
    },
    "PutUpdateCustomerNumberJsonV310": {
      "required": [
        "customer_number"
      ],
      "properties": {
        "customer_number": {
          "type": "string",
          "example": "5987953"
        }
      }
    },
    "ProductCollectionJsonV310": {
      "required": [
        "collection_code",
        "product_code",
        "items"
      ],
      "properties": {
        "collection_code": {
          "type": "string",
          "example": "C"
        },
        "product_code": {
          "type": "string",
          "example": "D"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductCollectionItemJsonV310"
          }
        }
      }
    },
    "WarehouseJSON": {
      "required": [
        "property",
        "value"
      ],
      "properties": {
        "property": {
          "type": "string",
          "example": "String"
        },
        "value": {
          "type": "string",
          "example": "ElasticSearch"
        }
      }
    },
    "PostCustomerNumberJsonV310": {
      "required": [
        "customer_number"
      ],
      "properties": {
        "customer_number": {
          "type": "string",
          "example": "5987953"
        }
      }
    },
    "TransactionRequestWithChargeJSONs210": {
      "required": [
        "transaction_requests_with_charges"
      ],
      "properties": {
        "transaction_requests_with_charges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRequestWithChargeJSON210"
          }
        }
      }
    },
    "LicenseJsonV140": {
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5"
        },
        "name": {
          "type": "string",
          "example": "TESOBE"
        }
      }
    },
    "AvailableRolesJSON": {
      "required": [
        "roles"
      ],
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableRoleJSON"
          }
        }
      }
    },
    "CounterpartyMetadataJson": {
      "required": [
        "public_alias",
        "physical_location",
        "image_url",
        "private_alias",
        "url",
        "more_info",
        "corporate_location",
        "open_corporates_url"
      ],
      "properties": {
        "public_alias": {
          "type": "string",
          "example": "String"
        },
        "physical_location": {
          "$ref": "#/definitions/LocationJsonV210"
        },
        "image_url": {
          "type": "string",
          "example": "String"
        },
        "private_alias": {
          "type": "string",
          "example": "String"
        },
        "url": {
          "type": "string",
          "example": "String"
        },
        "more_info": {
          "type": "string",
          "example": "String"
        },
        "corporate_location": {
          "$ref": "#/definitions/LocationJsonV210"
        },
        "open_corporates_url": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "CorporateLocationJSON": {
      "required": [
        "corporate_location"
      ],
      "properties": {
        "corporate_location": {
          "$ref": "#/definitions/LocationPlainJSON"
        }
      }
    },
    "AccountWebhookJson": {
      "required": [
        "created_by_user_id",
        "is_active",
        "url",
        "trigger_name",
        "http_protocol",
        "account_webhook_id",
        "http_method",
        "bank_id",
        "account_id"
      ],
      "properties": {
        "created_by_user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "is_active": {
          "type": "boolean",
          "example": "true"
        },
        "url": {
          "type": "string",
          "example": "https://localhost.openbankproject.com"
        },
        "trigger_name": {
          "type": "string",
          "example": "OnBalanceChange"
        },
        "http_protocol": {
          "type": "string",
          "example": "HTTP/1.1"
        },
        "account_webhook_id": {
          "type": "string",
          "example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        },
        "http_method": {
          "type": "string",
          "example": "POST"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        }
      }
    },
    "ProductsJsonV310": {
      "required": [
        "products"
      ],
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductJsonV310"
          }
        }
      }
    },
    "AccountApplicationJson": {
      "required": [
        "product_code"
      ],
      "properties": {
        "product_code": {
          "type": "string",
          "example": "saveing1"
        },
        "user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        }
      }
    },
    "GlossaryDescriptionJsonV300": {
      "required": [
        "markdown",
        "html"
      ],
      "properties": {
        "markdown": {
          "type": "string",
          "example": "String"
        },
        "html": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "TransactionRequestTransferToAccount": {
      "required": [
        "description",
        "future_date",
        "to",
        "transfer_type",
        "value"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "String"
        },
        "future_date": {
          "type": "string",
          "example": "20181230"
        },
        "to": {
          "$ref": "#/definitions/ToAccountTransferToAccount"
        },
        "transfer_type": {
          "type": "string",
          "example": "String"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        }
      }
    },
    "UpdateViewJSON": {
      "required": [
        "description",
        "is_public",
        "hide_metadata_if_alias_used",
        "which_alias_to_use",
        "metadata_view",
        "allowed_actions"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "this is for family"
        },
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "hide_metadata_if_alias_used": {
          "type": "boolean",
          "example": "true"
        },
        "which_alias_to_use": {
          "type": "string",
          "example": "family"
        },
        "metadata_view": {
          "type": "string",
          "example": "owner"
        },
        "allowed_actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TopConsumerJson": {
      "required": [
        "count",
        "consumer_id",
        "app_name",
        "developer_email"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "example": "7076"
        },
        "consumer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "app_name": {
          "type": "string",
          "example": "Api Explorer"
        },
        "developer_email": {
          "type": "string",
          "example": "eveline@example.com"
        }
      }
    },
    "ResourceUserJSON": {
      "required": [
        "provider",
        "email",
        "username",
        "provider_id",
        "user_id"
      ],
      "properties": {
        "provider": {
          "type": "string",
          "example": "http://127.0.0.1:8080"
        },
        "email": {
          "type": "string",
          "example": "eveline@example.com"
        },
        "username": {
          "type": "string",
          "example": "felixsmith"
        },
        "provider_id": {
          "type": "string",
          "example": "Chris"
        },
        "user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        }
      }
    },
    "OtherAccountJsonV300": {
      "required": [
        "account_routings",
        "holder",
        "id",
        "metadata",
        "bank_routing"
      ],
      "properties": {
        "account_routings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountRoutingJsonV121"
          }
        },
        "holder": {
          "$ref": "#/definitions/AccountHolderJSON"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "metadata": {
          "$ref": "#/definitions/OtherAccountMetadataJSON"
        },
        "bank_routing": {
          "$ref": "#/definitions/BankRoutingJsonV121"
        }
      }
    },
    "AccountsBalancesV310Json": {
      "required": [
        "accounts",
        "overall_balance",
        "overall_balance_date"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountBalanceV310"
          }
        },
        "overall_balance": {
          "$ref": "#/definitions/AmountOfMoney"
        },
        "overall_balance_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "PostKycDocumentJSON": {
      "required": [
        "number",
        "customer_number",
        "issue_date",
        "type",
        "issue_place",
        "expiry_date"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "12345"
        },
        "customer_number": {
          "type": "string",
          "example": "5987953"
        },
        "issue_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "type": {
          "type": "string",
          "example": "passport"
        },
        "issue_place": {
          "type": "string",
          "example": "Berlin"
        },
        "expiry_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "TransactionMetadataJSON": {
      "required": [
        "narrative",
        "tags",
        "where",
        "images",
        "comments"
      ],
      "properties": {
        "narrative": {
          "type": "string",
          "example": "NONE"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionTagJSON"
          }
        },
        "where": {
          "$ref": "#/definitions/LocationJSONV121"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionImageJSON"
          }
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionCommentJSON"
          }
        }
      }
    },
    "TransactionRequestTypeJsonV140": {
      "required": [
        "value",
        "charge"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "10"
        },
        "charge": {
          "$ref": "#/definitions/TransactionRequestChargeJsonV140"
        }
      }
    },
    "KycStatusesJSON": {
      "required": [
        "statuses"
      ],
      "properties": {
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KycStatusJSON"
          }
        }
      }
    },
    "OpenCorporateUrlJSON": {
      "required": [
        "open_corporates_URL"
      ],
      "properties": {
        "open_corporates_URL": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "RateLimitingInfoV310": {
      "required": [
        "enabled",
        "technology",
        "service_available",
        "is_active"
      ],
      "properties": {
        "enabled": {
          "type": "boolean",
          "example": "true"
        },
        "technology": {
          "type": "string",
          "example": "REDIS"
        },
        "service_available": {
          "type": "boolean",
          "example": "true"
        },
        "is_active": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "EntitlementRequestsJSON": {
      "required": [
        "entitlement_requests"
      ],
      "properties": {
        "entitlement_requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitlementRequestJSON"
          }
        }
      }
    },
    "PinResetJSON": {
      "required": [
        "requested_date",
        "reason_requested"
      ],
      "properties": {
        "requested_date": {
          "type": "string",
          "format": "date",
          "example": "2020-02-17T10:52:55Z"
        },
        "reason_requested": {
          "type": "string",
          "example": "GOOD_SECURITY_PRACTICE"
        }
      }
    },
    "CreateEntitlementJSON": {
      "required": [
        "bank_id",
        "role_name"
      ],
      "properties": {
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "role_name": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "AccountWebhookPutJson": {
      "required": [
        "account_webhook_id",
        "is_active"
      ],
      "properties": {
        "account_webhook_id": {
          "type": "string",
          "example": "fc23a7e2-7dd2-4bdf-a0b4-ae31232a4762"
        },
        "is_active": {
          "type": "string",
          "example": "true"
        }
      }
    },
    "CustomerAddressesJsonV310": {
      "required": [
        "addresses"
      ],
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerAddressJsonV310"
          }
        }
      }
    },
    "CustomerJsonV300": {
      "required": [
        "customer_id",
        "name_suffix",
        "email",
        "branch_id",
        "mobile_phone_number",
        "customer_number",
        "highest_education_attained",
        "dob_of_dependants",
        "bank_id",
        "date_of_birth",
        "last_ok_date",
        "employment_status",
        "legal_name",
        "title",
        "face_image",
        "dependants",
        "relationship_status",
        "kyc_status"
      ],
      "properties": {
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "name_suffix": {
          "type": "string",
          "example": "Sr"
        },
        "email": {
          "type": "string",
          "example": "eveline@example.com"
        },
        "branch_id": {
          "type": "string",
          "example": "DERBY6"
        },
        "mobile_phone_number": {
          "type": "string",
          "example": "+44 07972 444 876"
        },
        "customer_number": {
          "type": "string",
          "example": "5987953"
        },
        "highest_education_attained": {
          "type": "string",
          "example": "Master"
        },
        "dob_of_dependants": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "date_of_birth": {
          "type": "string",
          "example": "19900101"
        },
        "credit_rating": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerCreditRatingJSON"
          }
        },
        "last_ok_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "employment_status": {
          "type": "string",
          "example": "worker"
        },
        "legal_name": {
          "type": "string",
          "example": "Eveline Tripman"
        },
        "credit_limit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmountOfMoneyJsonV121"
          }
        },
        "title": {
          "type": "string",
          "example": "Dr."
        },
        "face_image": {
          "$ref": "#/definitions/CustomerFaceImageJson"
        },
        "dependants": {
          "type": "integer",
          "format": "int32",
          "example": "10"
        },
        "relationship_status": {
          "type": "string",
          "example": "single"
        },
        "kyc_status": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "CounterpartyIdJson": {
      "required": [
        "counterparty_id"
      ],
      "properties": {
        "counterparty_id": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "AccountWebhookPostJson": {
      "required": [
        "is_active",
        "url",
        "trigger_name",
        "http_protocol",
        "http_method",
        "account_id"
      ],
      "properties": {
        "is_active": {
          "type": "string",
          "example": "true"
        },
        "url": {
          "type": "string",
          "example": "https://localhost.openbankproject.com"
        },
        "trigger_name": {
          "type": "string",
          "example": "OnBalanceChange"
        },
        "http_protocol": {
          "type": "string",
          "example": "HTTP/1.1"
        },
        "http_method": {
          "type": "string",
          "example": "POST"
        },
        "account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        }
      }
    },
    "OrderObjectJson": {
      "required": [
        "order_id",
        "number_of_checkbooks",
        "first_check_number",
        "order_date",
        "status",
        "shipping_code",
        "distribution_channel"
      ],
      "properties": {
        "order_id": {
          "type": "string",
          "example": "xjksajfkj"
        },
        "number_of_checkbooks": {
          "type": "string",
          "example": "4"
        },
        "first_check_number": {
          "type": "string",
          "example": "5165276"
        },
        "order_date": {
          "type": "string",
          "example": "07082013"
        },
        "status": {
          "type": "string",
          "example": "2"
        },
        "shipping_code": {
          "type": "string",
          "example": "1"
        },
        "distribution_channel": {
          "type": "string",
          "example": "1201"
        }
      }
    },
    "AdapterImplementationJson": {
      "required": [
        "group",
        "suggested_order"
      ],
      "properties": {
        "group": {
          "type": "string",
          "example": "CORE"
        },
        "suggested_order": {
          "type": "integer",
          "format": "int32",
          "example": "3"
        }
      }
    },
    "ProductTreeJsonV310": {
      "required": [
        "name",
        "description",
        "more_info_url",
        "super_family",
        "code",
        "bank_id",
        "meta",
        "details",
        "category",
        "family"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "product name"
        },
        "description": {
          "type": "string",
          "example": "Description"
        },
        "parent_product": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductTreeJsonV310"
          }
        },
        "more_info_url": {
          "type": "string",
          "example": "www.example.com/prod1/more-info.html"
        },
        "super_family": {
          "type": "string",
          "example": "super family"
        },
        "code": {
          "type": "string",
          "example": "PARENT_CODE"
        },
        "bank_id": {
          "type": "string",
          "example": "testBank2"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "details": {
          "type": "string",
          "example": "Details"
        },
        "category": {
          "type": "string",
          "example": "category"
        },
        "family": {
          "type": "string",
          "example": "family"
        }
      }
    },
    "AccountTagsJSON": {
      "required": [
        "tags"
      ],
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountTagJSON"
          }
        }
      }
    },
    "ImageUrlJSON": {
      "required": [
        "image_URL"
      ],
      "properties": {
        "image_URL": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "UserAuthContextUpdateJson": {
      "required": [
        "user_auth_context_update_id",
        "user_id",
        "key",
        "status",
        "value"
      ],
      "properties": {
        "user_auth_context_update_id": {
          "type": "string",
          "example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        },
        "user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "key": {
          "type": "string",
          "example": "CUSTOMER_NUMBER"
        },
        "status": {
          "type": "string",
          "example": "INITIATED"
        },
        "value": {
          "type": "string",
          "example": "78987432"
        }
      }
    },
    "AccountApplicationsJsonV310": {
      "required": [
        "account_applications"
      ],
      "properties": {
        "account_applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountApplicationResponseJson"
          }
        }
      }
    },
    "PutUpdateCustomerBranchJsonV310": {
      "required": [
        "branch_id"
      ],
      "properties": {
        "branch_id": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "CustomerCreditRatingJSON": {
      "required": [
        "rating",
        "source"
      ],
      "properties": {
        "rating": {
          "type": "string",
          "example": "OBP"
        },
        "source": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "TransactionRequestChargeJsonV140": {
      "required": [
        "summary",
        "value"
      ],
      "properties": {
        "summary": {
          "type": "string",
          "example": "The bank fixed charge"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        }
      }
    },
    "PostTransactionCommentJSON": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "BranchJsonV300": {
      "required": [
        "name",
        "phone_number",
        "location",
        "branch_type",
        "branch_routing",
        "drive_up",
        "more_info",
        "bank_id",
        "id",
        "meta",
        "lobby",
        "accessibleFeatures",
        "address",
        "is_accessible"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Branch by the Lake"
        },
        "phone_number": {
          "type": "string",
          "example": "+381631954907"
        },
        "location": {
          "$ref": "#/definitions/LocationJsonV140"
        },
        "branch_type": {
          "type": "string",
          "example": "Full service store"
        },
        "branch_routing": {
          "$ref": "#/definitions/BranchRoutingJsonV141"
        },
        "drive_up": {
          "$ref": "#/definitions/DriveUpJsonV330"
        },
        "more_info": {
          "type": "string",
          "example": "short walk to the lake from here"
        },
        "bank_id": {
          "type": "string",
          "example": "bank-id-123"
        },
        "id": {
          "type": "string",
          "example": "branch-id-123"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "lobby": {
          "$ref": "#/definitions/LobbyJsonV330"
        },
        "accessibleFeatures": {
          "type": "string",
          "example": "wheelchair, atm usuable by the visually impaired"
        },
        "address": {
          "$ref": "#/definitions/AddressJsonV300"
        },
        "is_accessible": {
          "type": "string",
          "example": "true"
        }
      }
    },
    "ElasticSearchJsonV300": {
      "required": [
        "query"
      ],
      "properties": {
        "query": {
          "$ref": "#/definitions/ElasticSearchQuery"
        }
      }
    },
    "ThisAccountJsonV300": {
      "required": [
        "id",
        "bank_routing",
        "account_routings",
        "holders"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "String"
        },
        "bank_routing": {
          "$ref": "#/definitions/BankRoutingJsonV121"
        },
        "account_routings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountRoutingJsonV121"
          }
        },
        "holders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountHolderJSON"
          }
        }
      }
    },
    "PortJSON": {
      "required": [
        "property",
        "value"
      ],
      "properties": {
        "property": {
          "type": "string",
          "example": "default"
        },
        "value": {
          "type": "string",
          "example": "8080"
        }
      }
    },
    "BasicAccountJSON": {
      "required": [
        "id",
        "label",
        "bank_id",
        "views_available"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
        },
        "label": {
          "type": "string",
          "example": "NoneLabel"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "views_available": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicViewJson"
          }
        }
      }
    },
    "OrderJson": {
      "required": [
        "order"
      ],
      "properties": {
        "order": {
          "$ref": "#/definitions/OrderObjectJson"
        }
      }
    },
    "AdapterInfoJsonV300": {
      "required": [
        "name",
        "version",
        "git_commit",
        "date"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "String"
        },
        "version": {
          "type": "string",
          "example": "String"
        },
        "git_commit": {
          "type": "string",
          "example": "String"
        },
        "date": {
          "type": "string",
          "example": "2013-01-21T23:08:00Z"
        }
      }
    },
    "AmountOfMoney": {
      "required": [
        "currency",
        "amount"
      ],
      "properties": {
        "currency": {
          "type": "string",
          "example": "EUR"
        },
        "amount": {
          "type": "string",
          "example": "100"
        }
      }
    },
    "CoreAccountJson": {
      "required": [
        "account_routings",
        "label",
        "account_type",
        "bank_id",
        "id",
        "views"
      ],
      "properties": {
        "account_routings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountRoutingJsonV121"
          }
        },
        "label": {
          "type": "string",
          "example": "String"
        },
        "account_type": {
          "type": "string",
          "example": "330"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "views": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewBasicV300"
          }
        }
      }
    },
    "SuccessMessage": {
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "type": "string",
          "example": "Success"
        }
      }
    },
    "PostTransactionImageJSON": {
      "required": [
        "label",
        "URL"
      ],
      "properties": {
        "label": {
          "type": "string",
          "example": "String"
        },
        "URL": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "UserCustomerLinkJson": {
      "required": [
        "is_active",
        "customer_id",
        "user_id",
        "date_inserted",
        "user_customer_link_id"
      ],
      "properties": {
        "is_active": {
          "type": "boolean",
          "example": "true"
        },
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "date_inserted": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "user_customer_link_id": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "KycDocumentJSON": {
      "required": [
        "number",
        "customer_id",
        "customer_number",
        "issue_date",
        "bank_id",
        "id",
        "type",
        "issue_place",
        "expiry_date"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "customer_number": {
          "type": "string",
          "example": "5987953"
        },
        "issue_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "type": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "issue_place": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "expiry_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "TransactionRequestBodyJsonV200": {
      "required": [
        "to",
        "value",
        "description"
      ],
      "properties": {
        "to": {
          "$ref": "#/definitions/TransactionRequestAccountJsonV140"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "description": {
          "type": "string",
          "example": "this is for work"
        }
      }
    },
    "UpdateAccountRequestJsonV310": {
      "required": [
        "label",
        "type",
        "branch_id",
        "account_routing"
      ],
      "properties": {
        "label": {
          "type": "string",
          "example": "Label"
        },
        "type": {
          "type": "string",
          "example": "CURRENT"
        },
        "branch_id": {
          "type": "string",
          "example": "1234"
        },
        "account_routing": {
          "$ref": "#/definitions/AccountRoutingJsonV121"
        }
      }
    },
    "IbanJson": {
      "required": [
        "iban"
      ],
      "properties": {
        "iban": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "ProductAttributeJson": {
      "required": [
        "name",
        "type",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "OVERDRAFT_START_DATE"
        },
        "type": {
          "type": "string",
          "example": "DATE_WITH_DAY"
        },
        "value": {
          "type": "string",
          "example": "2012-04-23"
        }
      }
    },
    "PostTransactionWhereJSON": {
      "required": [
        "where"
      ],
      "properties": {
        "where": {
          "$ref": "#/definitions/LocationPlainJSON"
        }
      }
    },
    "TransactionTypesJsonV200": {
      "required": [
        "transaction_types"
      ],
      "properties": {
        "transaction_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionTypeJsonV200"
          }
        }
      }
    },
    "CreditLimitRequestJson": {
      "required": [
        "requested_current_rate_amount1",
        "temporary_credit_documentation",
        "requested_current_valid_end_date",
        "temporary_requested_current_amount",
        "requested_current_rate_amount2",
        "requested_temporary_valid_end_date",
        "current_credit_documentation"
      ],
      "properties": {
        "requested_current_rate_amount1": {
          "type": "string",
          "example": "String"
        },
        "temporary_credit_documentation": {
          "type": "string",
          "example": "String"
        },
        "requested_current_valid_end_date": {
          "type": "string",
          "example": "String"
        },
        "temporary_requested_current_amount": {
          "type": "string",
          "example": "String"
        },
        "requested_current_rate_amount2": {
          "type": "string",
          "example": "String"
        },
        "requested_temporary_valid_end_date": {
          "type": "string",
          "example": "String"
        },
        "current_credit_documentation": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "EmptyElasticSearch": {
      "properties": {
        "none": {
          "type": "string",
          "example": ""
        }
      }
    },
    "BankJSONV220": {
      "required": [
        "national_identifier",
        "full_name",
        "swift_bic",
        "logo_url",
        "id",
        "short_name",
        "bank_routing",
        "website_url"
      ],
      "properties": {
        "national_identifier": {
          "type": "string",
          "example": "UK97ZZZ1234567890"
        },
        "full_name": {
          "type": "string",
          "example": "uk"
        },
        "swift_bic": {
          "type": "string",
          "example": "IIIGGB22"
        },
        "logo_url": {
          "type": "string",
          "example": "https://static.openbankproject.com/images/sandbox/bank_x.png"
        },
        "id": {
          "type": "string",
          "example": "gh.29.uk.x"
        },
        "short_name": {
          "type": "string",
          "example": "uk"
        },
        "bank_routing": {
          "$ref": "#/definitions/BankRoutingJsonV121"
        },
        "website_url": {
          "type": "string",
          "example": "https://www.example.com"
        }
      }
    },
    "TransactionRequestBodySEPAJSON": {
      "required": [
        "description",
        "to",
        "charge_policy",
        "value"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "This is a SEPA Transaction Request"
        },
        "future_date": {
          "type": "string",
          "example": "20881230"
        },
        "to": {
          "$ref": "#/definitions/IbanJson"
        },
        "charge_policy": {
          "type": "string",
          "example": "SHARED"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        }
      }
    },
    "ViewIdsJson": {
      "required": [
        "views"
      ],
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CoreCounterpartyJsonV300": {
      "required": [
        "id",
        "holder",
        "bank_routing",
        "account_routings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "holder": {
          "$ref": "#/definitions/AccountHolderJSON"
        },
        "bank_routing": {
          "$ref": "#/definitions/BankRoutingJsonV121"
        },
        "account_routings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountRoutingJsonV121"
          }
        }
      }
    },
    "TransactionRequestWithChargeJson": {
      "required": [
        "challenge",
        "start_date",
        "id",
        "end_date",
        "status",
        "from",
        "details",
        "charge",
        "type",
        "transaction_ids"
      ],
      "properties": {
        "challenge": {
          "$ref": "#/definitions/ChallengeJsonV140"
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "id": {
          "type": "string",
          "example": "82f92531-9c63-4246-abfc-96c20ec46188"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "status": {
          "type": "string",
          "example": "COMPLETED"
        },
        "from": {
          "$ref": "#/definitions/TransactionRequestAccountJsonV140"
        },
        "details": {
          "$ref": "#/definitions/TransactionRequestBody"
        },
        "charge": {
          "$ref": "#/definitions/TransactionRequestChargeJsonV200"
        },
        "type": {
          "type": "string",
          "example": "SANDBOX_TAN"
        },
        "transaction_ids": {
          "type": "string",
          "example": "666666-9c63-4246-abfc-96c20ec46188"
        }
      }
    },
    "TransactionTypeJsonV200": {
      "required": [
        "description",
        "short_code",
        "bank_id",
        "id",
        "charge",
        "summary"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "short_code": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "id": {
          "$ref": "#/definitions/TransactionTypeId"
        },
        "charge": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "summary": {
          "type": "string",
          "example": "PlaceholderString"
        }
      }
    },
    "PhysicalCardWithAttributesJsonV310": {
      "required": [
        "allows",
        "expires_date",
        "networks",
        "customer_id",
        "issue_number",
        "replacement",
        "enabled",
        "collected",
        "card_number",
        "technology",
        "cancelled",
        "bank_id",
        "card_id",
        "pin_reset",
        "serial_number",
        "account",
        "valid_from_date",
        "card_attributes",
        "name_on_card",
        "posted",
        "card_type",
        "on_hot_list"
      ],
      "properties": {
        "allows": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expires_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "networks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "issue_number": {
          "type": "string",
          "example": "1"
        },
        "replacement": {
          "$ref": "#/definitions/ReplacementJSON"
        },
        "enabled": {
          "type": "boolean",
          "example": "true"
        },
        "collected": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "card_number": {
          "type": "string",
          "example": "364435172576215"
        },
        "technology": {
          "type": "string",
          "example": "technologyString1"
        },
        "cancelled": {
          "type": "boolean",
          "example": "true"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "card_id": {
          "type": "string",
          "example": "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
        },
        "pin_reset": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PinResetJSON"
          }
        },
        "serial_number": {
          "type": "string",
          "example": "1324234"
        },
        "account": {
          "$ref": "#/definitions/AccountBasicV310"
        },
        "valid_from_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "card_attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CardAttributeCommons"
          }
        },
        "name_on_card": {
          "type": "string",
          "example": "SusanSmith"
        },
        "posted": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "card_type": {
          "type": "string",
          "example": "Credit"
        },
        "on_hot_list": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "AccountHeldJson": {
      "required": [
        "id",
        "bank_id",
        "number",
        "account_routings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "12314"
        },
        "bank_id": {
          "type": "string",
          "example": "123"
        },
        "number": {
          "type": "string",
          "example": "123"
        },
        "account_routings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountRoutingJsonV121"
          }
        }
      }
    },
    "ProductJsonV310": {
      "required": [
        "name",
        "description",
        "more_info_url",
        "super_family",
        "code",
        "bank_id",
        "meta",
        "details",
        "category",
        "family",
        "parent_product_code"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "product name"
        },
        "description": {
          "type": "string",
          "example": "Description"
        },
        "more_info_url": {
          "type": "string",
          "example": "www.example.com/prod1/more-info.html"
        },
        "super_family": {
          "type": "string",
          "example": "super family"
        },
        "code": {
          "type": "string",
          "example": "product_code"
        },
        "product_attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductAttributeResponseWithoutBankIdJson"
          }
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "details": {
          "type": "string",
          "example": "Details"
        },
        "category": {
          "type": "string",
          "example": "category"
        },
        "family": {
          "type": "string",
          "example": "family"
        },
        "parent_product_code": {
          "type": "string",
          "example": "parent"
        }
      }
    },
    "PostStandingOrderJsonV400": {
      "required": [
        "date_starts",
        "customer_id",
        "user_id",
        "amount",
        "counterparty_id",
        "when"
      ],
      "properties": {
        "date_starts": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "date_signed": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "amount": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "date_expires": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "counterparty_id": {
          "type": "string",
          "example": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "when": {
          "$ref": "#/definitions/When"
        }
      }
    },
    "AccountRoutingJsonV121": {
      "required": [
        "scheme",
        "address"
      ],
      "properties": {
        "scheme": {
          "type": "string",
          "example": "AccountNumber"
        },
        "address": {
          "type": "string",
          "example": "4930396"
        }
      }
    },
    "EnergySource400": {
      "required": [
        "organisation",
        "organisation_website"
      ],
      "properties": {
        "organisation": {
          "type": "string",
          "example": "Stromio"
        },
        "organisation_website": {
          "type": "string",
          "example": "https://www.stromio.de/"
        }
      }
    },
    "PutProductCollectionsV310": {
      "required": [
        "parent_product_code",
        "children_product_codes"
      ],
      "properties": {
        "parent_product_code": {
          "type": "string",
          "example": "A"
        },
        "children_product_codes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TransactionRequestChargeJsonV200": {
      "required": [
        "summary",
        "value"
      ],
      "properties": {
        "summary": {
          "type": "string",
          "example": "Rent the flat"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        }
      }
    },
    "MoreInfoJSON": {
      "required": [
        "more_info"
      ],
      "properties": {
        "more_info": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "PostCounterpartyJSON": {
      "required": [
        "other_account_routing_address",
        "other_account_routing_scheme",
        "name",
        "other_account_secondary_routing_address",
        "is_beneficiary",
        "description",
        "other_branch_routing_address",
        "bespoke",
        "other_bank_routing_scheme",
        "other_branch_routing_scheme",
        "other_bank_routing_address",
        "other_account_secondary_routing_scheme"
      ],
      "properties": {
        "other_account_routing_address": {
          "type": "string",
          "example": "7987987-2348987-234234"
        },
        "other_account_routing_scheme": {
          "type": "string",
          "example": "accountNumber"
        },
        "name": {
          "type": "string",
          "example": "CounterpartyName"
        },
        "other_account_secondary_routing_address": {
          "type": "string",
          "example": "DE89370400440532013000"
        },
        "is_beneficiary": {
          "type": "boolean",
          "example": "true"
        },
        "description": {
          "type": "string",
          "example": "My landlord"
        },
        "other_branch_routing_address": {
          "type": "string",
          "example": "10010"
        },
        "bespoke": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostCounterpartyBespokeJson"
          }
        },
        "other_bank_routing_scheme": {
          "type": "string",
          "example": "bankCode"
        },
        "other_branch_routing_scheme": {
          "type": "string",
          "example": "branchNumber"
        },
        "other_bank_routing_address": {
          "type": "string",
          "example": "10"
        },
        "other_account_secondary_routing_scheme": {
          "type": "string",
          "example": "IBAN"
        }
      }
    },
    "TransactionTagJSON": {
      "required": [
        "id",
        "value",
        "date",
        "user"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "value": {
          "type": "string",
          "example": "OBP"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        }
      }
    },
    "TransactionRequestTypeJSONV210": {
      "required": [
        "transaction_request_type"
      ],
      "properties": {
        "transaction_request_type": {
          "type": "string",
          "example": "SandboxTan"
        }
      }
    },
    "PutUpdateCustomerMobilePhoneNumberJsonV310": {
      "required": [
        "mobile_phone_number"
      ],
      "properties": {
        "mobile_phone_number": {
          "type": "string",
          "example": "+381631954907"
        }
      }
    },
    "RefreshUserJson": {
      "required": [
        "duration_time"
      ],
      "properties": {
        "duration_time": {
          "type": "string",
          "example": "10 ms"
        }
      }
    },
    "LobbyJsonV330": {
      "required": [
        "sunday",
        "tuesday",
        "wednesday",
        "monday",
        "friday",
        "thursday",
        "saturday"
      ],
      "properties": {
        "sunday": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpeningTimesV300"
          }
        },
        "tuesday": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpeningTimesV300"
          }
        },
        "wednesday": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpeningTimesV300"
          }
        },
        "monday": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpeningTimesV300"
          }
        },
        "friday": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpeningTimesV300"
          }
        },
        "thursday": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpeningTimesV300"
          }
        },
        "saturday": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpeningTimesV300"
          }
        }
      }
    },
    "PostDirectDebitJsonV400": {
      "required": [
        "date_starts",
        "customer_id",
        "user_id",
        "counterparty_id"
      ],
      "properties": {
        "date_starts": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "date_signed": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "date_expires": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "counterparty_id": {
          "type": "string",
          "example": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        }
      }
    },
    "CreateUserJson": {
      "required": [
        "first_name",
        "email",
        "username",
        "last_name",
        "password"
      ],
      "properties": {
        "first_name": {
          "type": "string",
          "example": "Simon"
        },
        "email": {
          "type": "string",
          "example": "eveline@example.com"
        },
        "username": {
          "type": "string",
          "example": "felixsmith"
        },
        "last_name": {
          "type": "string",
          "example": "Redfern"
        },
        "password": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "PostKycMediaJSON": {
      "required": [
        "url",
        "customer_number",
        "date",
        "relates_to_kyc_document_id",
        "relates_to_kyc_check_id",
        "type"
      ],
      "properties": {
        "url": {
          "type": "string",
          "example": "http://www.example.com/id-docs/123/image.png"
        },
        "customer_number": {
          "type": "string",
          "example": "5987953"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "relates_to_kyc_document_id": {
          "type": "string",
          "example": "123"
        },
        "relates_to_kyc_check_id": {
          "type": "string",
          "example": "123"
        },
        "type": {
          "type": "string",
          "example": "image"
        }
      }
    },
    "ConsumersJsonV310": {
      "required": [
        "consumers"
      ],
      "properties": {
        "consumers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumerJsonV310"
          }
        }
      }
    },
    "AccountRouting": {
      "required": [
        "scheme",
        "address"
      ],
      "properties": {
        "scheme": {
          "type": "string",
          "example": "accountNumber"
        },
        "address": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "UserJsonV200": {
      "required": [
        "provider",
        "email",
        "username",
        "provider_id",
        "user_id",
        "entitlements"
      ],
      "properties": {
        "provider": {
          "type": "string",
          "example": "http://127.0.0.1:8080"
        },
        "email": {
          "type": "string",
          "example": "eveline@example.com"
        },
        "username": {
          "type": "string",
          "example": "felixsmith"
        },
        "provider_id": {
          "type": "string",
          "example": "Chris"
        },
        "user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "entitlements": {
          "$ref": "#/definitions/EntitlementJSONs"
        }
      }
    },
    "AccountBalanceV310": {
      "required": [
        "account_routings",
        "label",
        "balance",
        "bank_id",
        "id"
      ],
      "properties": {
        "account_routings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountRouting"
          }
        },
        "label": {
          "type": "string",
          "example": "My Account"
        },
        "balance": {
          "$ref": "#/definitions/AmountOfMoney"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        }
      }
    },
    "TaxResidenceV310": {
      "required": [
        "domain",
        "tax_number",
        "tax_residence_id"
      ],
      "properties": {
        "domain": {
          "type": "string",
          "example": "Enter some domain"
        },
        "tax_number": {
          "type": "string",
          "example": "Enter some number"
        },
        "tax_residence_id": {
          "type": "string",
          "example": "902ba3bb-dedd-45e7-9319-2fd3f2cd98a1"
        }
      }
    },
    "RateLimit": {
      "properties": {
        "calls_made": {
          "type": "integer",
          "format": "int64",
          "example": "-1"
        },
        "reset_in_seconds": {
          "type": "integer",
          "format": "int64",
          "example": "-1"
        }
      }
    },
    "MetaJsonV140": {
      "required": [
        "license"
      ],
      "properties": {
        "license": {
          "$ref": "#/definitions/LicenseJsonV140"
        }
      }
    },
    "CustomerAddressJsonV310": {
      "required": [
        "city",
        "line_2",
        "customer_id",
        "state",
        "insert_date",
        "tags",
        "customer_address_id",
        "postcode",
        "county",
        "country_code",
        "status",
        "line_3",
        "line_1"
      ],
      "properties": {
        "city": {
          "type": "string",
          "example": "Berlin"
        },
        "line_2": {
          "type": "string",
          "example": "The Place"
        },
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "state": {
          "type": "string",
          "example": "Brandenburg"
        },
        "insert_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customer_address_id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "postcode": {
          "type": "string",
          "example": "13359"
        },
        "county": {
          "type": "string",
          "example": ""
        },
        "country_code": {
          "type": "string",
          "example": "DE"
        },
        "status": {
          "type": "string",
          "example": "OK"
        },
        "line_3": {
          "type": "string",
          "example": "The Hill"
        },
        "line_1": {
          "type": "string",
          "example": "No 1 the Road"
        }
      }
    },
    "AccountAttributeResponseJson": {
      "required": [
        "name",
        "account_attribute_id",
        "product_code",
        "type",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "OVERDRAFT_START_DATE"
        },
        "account_attribute_id": {
          "type": "string",
          "example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        },
        "product_code": {
          "type": "string",
          "example": "saving1"
        },
        "type": {
          "type": "string",
          "example": "DATE_WITH_DAY"
        },
        "value": {
          "type": "string",
          "example": "2012-04-23"
        }
      }
    },
    "MeetingsJsonV310": {
      "required": [
        "meetings"
      ],
      "properties": {
        "meetings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeetingJsonV310"
          }
        }
      }
    },
    "FXRateJsonV220": {
      "required": [
        "inverse_conversion_value",
        "to_currency_code",
        "effective_date",
        "conversion_value",
        "bank_id",
        "from_currency_code"
      ],
      "properties": {
        "inverse_conversion_value": {
          "type": "number",
          "format": "double",
          "example": "0.998"
        },
        "to_currency_code": {
          "type": "string",
          "example": "GBP"
        },
        "effective_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "conversion_value": {
          "type": "number",
          "format": "double",
          "example": "1.001"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "from_currency_code": {
          "type": "string",
          "example": "EUR"
        }
      }
    },
    "AccountTagJSON": {
      "required": [
        "id",
        "value",
        "date",
        "user"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "value": {
          "type": "string",
          "example": "OBP"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        }
      }
    },
    "KycChecksJSON": {
      "required": [
        "checks"
      ],
      "properties": {
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KycCheckJSON"
          }
        }
      }
    },
    "BasicViewJson": {
      "required": [
        "id",
        "short_name",
        "is_public"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "1"
        },
        "short_name": {
          "type": "string",
          "example": "HHH"
        },
        "is_public": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "TransactionType": {
      "required": [
        "shortCode",
        "description",
        "id",
        "charge",
        "bankId",
        "summary"
      ],
      "properties": {
        "shortCode": {
          "type": "string",
          "example": "80080"
        },
        "description": {
          "type": "string",
          "example": "This is the sandbox mode, charging litter money."
        },
        "id": {
          "$ref": "#/definitions/TransactionTypeId"
        },
        "charge": {
          "$ref": "#/definitions/AmountOfMoney"
        },
        "bankId": {
          "$ref": "#/definitions/BankId"
        },
        "summary": {
          "type": "string",
          "example": "SANDBOX_TAN"
        }
      }
    },
    "DirectDebitJsonV400": {
      "required": [
        "date_starts",
        "customer_id",
        "date_cancelled",
        "date_signed",
        "user_id",
        "bank_id",
        "account_id",
        "date_expires",
        "counterparty_id",
        "direct_debit_id",
        "active"
      ],
      "properties": {
        "date_starts": {
          "type": "string",
          "format": "date",
          "example": "2020-02-17T10:52:56Z"
        },
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "date_cancelled": {
          "type": "string",
          "format": "date",
          "example": "2020-02-17T10:52:56Z"
        },
        "date_signed": {
          "type": "string",
          "format": "date",
          "example": "2020-02-17T10:52:56Z"
        },
        "user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "date_expires": {
          "type": "string",
          "format": "date",
          "example": "2020-02-17T10:52:56Z"
        },
        "counterparty_id": {
          "type": "string",
          "example": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "direct_debit_id": {
          "type": "string",
          "example": "aa0533bd-eb22-4bff-af75-d45240361b05"
        },
        "active": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "ModeratedCoreAccountJsonV300": {
      "required": [
        "number",
        "account_routings",
        "label",
        "owners",
        "balance",
        "bank_id",
        "id",
        "type",
        "account_rules"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "String"
        },
        "account_routings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountRoutingJsonV121"
          }
        },
        "label": {
          "type": "string",
          "example": "String"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserJSONV121"
          }
        },
        "balance": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "bank_id": {
          "type": "string",
          "example": "String"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "type": {
          "type": "string",
          "example": "String"
        },
        "account_rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountRuleJsonV300"
          }
        }
      }
    },
    "ConsumerJsonV310": {
      "required": [
        "app_type",
        "description",
        "created_by_user",
        "enabled",
        "redirect_url",
        "developer_email",
        "consumer_id",
        "app_name",
        "created"
      ],
      "properties": {
        "app_type": {
          "type": "string",
          "example": "Web"
        },
        "description": {
          "type": "string",
          "example": "Account Management"
        },
        "created_by_user": {
          "$ref": "#/definitions/ResourceUserJSON"
        },
        "enabled": {
          "type": "boolean",
          "example": "true"
        },
        "redirect_url": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "developer_email": {
          "type": "string",
          "example": "eveline@example.com"
        },
        "consumer_id": {
          "type": "string",
          "example": "8e716299-4668-4efd-976a-67f57a9984ec"
        },
        "app_name": {
          "type": "string",
          "example": "SOFI"
        },
        "created": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "ProductCollectionsJsonV310": {
      "required": [
        "product_collection"
      ],
      "properties": {
        "product_collection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductCollectionJsonV310"
          }
        }
      }
    },
    "TransactionRequestBodyAllTypes": {
      "required": [
        "description",
        "value"
      ],
      "properties": {
        "to_transfer_to_phone": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRequestTransferToPhone"
          }
        },
        "description": {
          "type": "string",
          "example": "String"
        },
        "to_transfer_to_atm": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRequestTransferToAtm"
          }
        },
        "to_counterparty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRequestCounterpartyId"
          }
        },
        "to_sepa_credit_transfers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SepaCreditTransfers"
          }
        },
        "to_sepa": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRequestIban"
          }
        },
        "to_transfer_to_account": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRequestTransferToAccount"
          }
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoney"
        },
        "to_sandbox_tan": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRequestAccount"
          }
        }
      }
    },
    "CreatePhysicalCardJsonV310": {
      "required": [
        "allows",
        "expires_date",
        "networks",
        "customer_id",
        "issue_number",
        "replacement",
        "enabled",
        "collected",
        "card_number",
        "technology",
        "account_id",
        "pin_reset",
        "serial_number",
        "valid_from_date",
        "name_on_card",
        "posted",
        "card_type"
      ],
      "properties": {
        "allows": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expires_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "networks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "issue_number": {
          "type": "string",
          "example": "1"
        },
        "replacement": {
          "$ref": "#/definitions/ReplacementJSON"
        },
        "enabled": {
          "type": "boolean",
          "example": "true"
        },
        "collected": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "card_number": {
          "type": "string",
          "example": "364435172576215"
        },
        "technology": {
          "type": "string",
          "example": "technology1"
        },
        "account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "pin_reset": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PinResetJSON"
          }
        },
        "serial_number": {
          "type": "string",
          "example": "1324234"
        },
        "valid_from_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "name_on_card": {
          "type": "string",
          "example": "SusanSmith"
        },
        "posted": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "card_type": {
          "type": "string",
          "example": "Credit"
        }
      }
    },
    "TransactionRequestTypesJsonV140": {
      "required": [
        "transaction_request_types"
      ],
      "properties": {
        "transaction_request_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRequestTypeJsonV140"
          }
        }
      }
    },
    "CounterpartiesJsonV220": {
      "required": [
        "counterparties"
      ],
      "properties": {
        "counterparties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CounterpartyJsonV220"
          }
        }
      }
    },
    "ProductCollectionItemJsonV310": {
      "required": [
        "member_product_code"
      ],
      "properties": {
        "member_product_code": {
          "type": "string",
          "example": "A"
        }
      }
    },
    "TopApisJson": {
      "required": [
        "top_apis"
      ],
      "properties": {
        "top_apis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopApiJson"
          }
        }
      }
    },
    "CheckbookOrdersJson": {
      "required": [
        "account",
        "orders"
      ],
      "properties": {
        "account": {
          "$ref": "#/definitions/AccountV310Json"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderJson"
          }
        }
      }
    },
    "PostHistoricalTransactionJson": {
      "required": [
        "description",
        "to",
        "completed",
        "charge_policy",
        "from",
        "type",
        "value",
        "posted"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "this is for work"
        },
        "to": {
          "$ref": "#/definitions/TransactionRequestAccountJsonV140"
        },
        "completed": {
          "type": "string",
          "example": "2017-09-19T02:31:05Z"
        },
        "charge_policy": {
          "type": "string",
          "example": "SHARED"
        },
        "from": {
          "$ref": "#/definitions/TransactionRequestAccountJsonV140"
        },
        "type": {
          "type": "string",
          "example": "SANDBOX_TAN"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "posted": {
          "type": "string",
          "example": "2017-09-19T02:31:05Z"
        }
      }
    },
    "KycMediasJSON": {
      "required": [
        "medias"
      ],
      "properties": {
        "medias": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KycMediaJSON"
          }
        }
      }
    },
    "BranchesJsonV300": {
      "required": [
        "branches"
      ],
      "properties": {
        "branches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BranchJsonV300"
          }
        }
      }
    },
    "AccountsIdsJsonV300": {
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountIdJson"
          }
        }
      }
    },
    "TransactionRequestAccountJsonV140": {
      "required": [
        "bank_id",
        "account_id"
      ],
      "properties": {
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        }
      }
    },
    "AvailableRoleJSON": {
      "required": [
        "role",
        "requires_bank_id"
      ],
      "properties": {
        "role": {
          "type": "string",
          "example": "CanCreateBranch"
        },
        "requires_bank_id": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "CustomerJSONs": {
      "required": [
        "customers"
      ],
      "properties": {
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerJsonV210"
          }
        }
      }
    },
    "AccountV310Json": {
      "required": [
        "account_routings",
        "account_type",
        "bank_id",
        "account_id",
        "branch_routings"
      ],
      "properties": {
        "account_routings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountRoutingJsonV121"
          }
        },
        "account_type": {
          "type": "string",
          "example": "330"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "branch_routings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BranchRoutingJsonV141"
          }
        }
      }
    },
    "AccountJSON": {
      "required": [
        "id",
        "label",
        "views_available",
        "bank_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "123"
        },
        "label": {
          "type": "string",
          "example": "OBP"
        },
        "views_available": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJSONV121"
          }
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        }
      }
    },
    "CardAttributeCommons": {
      "required": [
        "name",
        "attribute_type",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "OVERDRAFT_START_DATE"
        },
        "card_id": {
          "type": "string",
          "example": "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
        },
        "attribute_type": {
          "type": "string",
          "enum": [
            "STRING",
            "INTEGER",
            "DOUBLE",
            "DATE_WITH_DAY"
          ]
        },
        "bank_id": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BankId"
          }
        },
        "value": {
          "type": "string",
          "example": "2012-04-23"
        },
        "card_attribute_id": {
          "type": "string",
          "example": "b4e0352a-9a0f-4bfa-b30b-9003aa467f50"
        }
      }
    },
    "DriveUpJsonV330": {
      "required": [
        "sunday",
        "tuesday",
        "wednesday",
        "monday",
        "friday",
        "thursday",
        "saturday"
      ],
      "properties": {
        "sunday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "tuesday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "wednesday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "monday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "friday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "thursday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "saturday": {
          "$ref": "#/definitions/OpeningTimesV300"
        }
      }
    },
    "CounterpartyJsonV220": {
      "required": [
        "other_account_routing_address",
        "other_account_routing_scheme",
        "created_by_user_id",
        "name",
        "other_account_secondary_routing_address",
        "is_beneficiary",
        "description",
        "other_branch_routing_address",
        "bespoke",
        "other_bank_routing_scheme",
        "other_branch_routing_scheme",
        "this_account_id",
        "this_view_id",
        "other_bank_routing_address",
        "this_bank_id",
        "counterparty_id",
        "other_account_secondary_routing_scheme"
      ],
      "properties": {
        "other_account_routing_address": {
          "type": "string",
          "example": "7987987-2348987-234234"
        },
        "other_account_routing_scheme": {
          "type": "string",
          "example": "accountNumber"
        },
        "created_by_user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "name": {
          "type": "string",
          "example": "CounterpartyName"
        },
        "other_account_secondary_routing_address": {
          "type": "string",
          "example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
        },
        "is_beneficiary": {
          "type": "boolean",
          "example": "true"
        },
        "description": {
          "type": "string",
          "example": "My landlord"
        },
        "other_branch_routing_address": {
          "type": "string",
          "example": "10010"
        },
        "bespoke": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostCounterpartyBespokeJson"
          }
        },
        "other_bank_routing_scheme": {
          "type": "string",
          "example": "bankCode"
        },
        "other_branch_routing_scheme": {
          "type": "string",
          "example": "branchNumber"
        },
        "this_account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "this_view_id": {
          "type": "string",
          "example": "owner"
        },
        "other_bank_routing_address": {
          "type": "string",
          "example": "10"
        },
        "this_bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "counterparty_id": {
          "type": "string",
          "example": "1d65db7c-a7b2-4839-af41-958276ab7790"
        },
        "other_account_secondary_routing_scheme": {
          "type": "string",
          "example": "accountId"
        }
      }
    },
    "LocationJsonV140": {
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "example": "11.45"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "example": "11.45"
        }
      }
    },
    "ChallengeAnswerJSON": {
      "required": [
        "id",
        "answer"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "This is challenge.id, you can get it from `Create Transaction Request.` response, only is useful if status ==`INITIATED` there."
        },
        "answer": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "CustomerFaceImageJson": {
      "required": [
        "url",
        "date"
      ],
      "properties": {
        "url": {
          "type": "string",
          "example": "www.openbankproject"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "CreateViewJson": {
      "required": [
        "name",
        "description",
        "is_public",
        "hide_metadata_if_alias_used",
        "which_alias_to_use",
        "metadata_view",
        "allowed_actions"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "test"
        },
        "description": {
          "type": "string",
          "example": "This view is for family"
        },
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "hide_metadata_if_alias_used": {
          "type": "boolean",
          "example": "false"
        },
        "which_alias_to_use": {
          "type": "string",
          "example": "family"
        },
        "metadata_view": {
          "type": "string",
          "example": "test"
        },
        "allowed_actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "KycMediaJSON": {
      "required": [
        "customer_id",
        "url",
        "customer_number",
        "bank_id",
        "id",
        "date",
        "relates_to_kyc_document_id",
        "relates_to_kyc_check_id",
        "type"
      ],
      "properties": {
        "customer_id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "url": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "customer_number": {
          "type": "string",
          "example": "5987953"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "relates_to_kyc_document_id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "relates_to_kyc_check_id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "type": {
          "type": "string",
          "example": "PlaceholderString"
        }
      }
    },
    "CrmEventJson": {
      "required": [
        "channel",
        "customer_name",
        "result",
        "customer_number",
        "bank_id",
        "id",
        "scheduled_date",
        "category",
        "detail",
        "actual_date"
      ],
      "properties": {
        "channel": {
          "type": "string",
          "example": "String"
        },
        "customer_name": {
          "type": "string",
          "example": "String"
        },
        "result": {
          "type": "string",
          "example": "String"
        },
        "customer_number": {
          "type": "string",
          "example": "5987953"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "scheduled_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "category": {
          "type": "string",
          "example": "String"
        },
        "detail": {
          "type": "string",
          "example": "String"
        },
        "actual_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "CreditLimitOrderJson": {
      "required": [
        "rank_amount_1",
        "nominal_interest_1",
        "rank_amount_2",
        "nominal_interest_2"
      ],
      "properties": {
        "rank_amount_1": {
          "type": "string",
          "example": "String"
        },
        "nominal_interest_1": {
          "type": "string",
          "example": "String"
        },
        "rank_amount_2": {
          "type": "string",
          "example": "String"
        },
        "nominal_interest_2": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "ContactDetailsJson": {
      "required": [
        "name",
        "mobile_phone",
        "email_address"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Simon "
        },
        "mobile_phone": {
          "type": "string",
          "example": "+44 07972 444 876"
        },
        "email_address": {
          "type": "string",
          "example": "eveline@example.com"
        }
      }
    },
    "ToAccountTransferToAtmKycDocument": {
      "required": [
        "type",
        "number"
      ],
      "properties": {
        "type": {
          "type": "string",
          "example": "String"
        },
        "number": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "MeetingJsonV310": {
      "required": [
        "present",
        "provider_id",
        "creator",
        "invitees",
        "bank_id",
        "purpose_id",
        "when",
        "meeting_id",
        "keys"
      ],
      "properties": {
        "present": {
          "$ref": "#/definitions/MeetingPresentJson"
        },
        "provider_id": {
          "type": "string",
          "example": "Chris"
        },
        "creator": {
          "$ref": "#/definitions/ContactDetailsJson"
        },
        "invitees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InviteeJson"
          }
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "purpose_id": {
          "type": "string",
          "example": "String, eg: onboarding"
        },
        "when": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "meeting_id": {
          "type": "string",
          "example": "UUID-String"
        },
        "keys": {
          "$ref": "#/definitions/MeetingKeysJson"
        }
      }
    },
    "UpdatePhysicalCardJsonV310": {
      "required": [
        "allows",
        "expires_date",
        "networks",
        "customer_id",
        "issue_number",
        "replacement",
        "enabled",
        "collected",
        "technology",
        "account_id",
        "pin_reset",
        "serial_number",
        "valid_from_date",
        "name_on_card",
        "posted",
        "card_type"
      ],
      "properties": {
        "allows": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expires_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "networks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "issue_number": {
          "type": "string",
          "example": "1"
        },
        "replacement": {
          "$ref": "#/definitions/ReplacementJSON"
        },
        "enabled": {
          "type": "boolean",
          "example": "true"
        },
        "collected": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "technology": {
          "type": "string",
          "example": "technology1"
        },
        "account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "pin_reset": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PinResetJSON"
          }
        },
        "serial_number": {
          "type": "string",
          "example": "1324234"
        },
        "valid_from_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "name_on_card": {
          "type": "string",
          "example": "SusanSmith"
        },
        "posted": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "card_type": {
          "type": "string",
          "example": "Credit"
        }
      }
    },
    "MessageDocJson": {
      "required": [
        "adapter_implementation",
        "example_inbound_message",
        "description",
        "process",
        "message_format",
        "example_outbound_message"
      ],
      "properties": {
        "adapter_implementation": {
          "$ref": "#/definitions/AdapterImplementationJson"
        },
        "outboundAvroSchema": {
          "type": "string",
          "example": "This is a json String."
        },
        "example_inbound_message": {
          "type": "string",
          "example": "This is a json String."
        },
        "inboundAvroSchema": {
          "type": "string",
          "example": "This is a json String."
        },
        "description": {
          "type": "string",
          "example": "get Banks"
        },
        "process": {
          "type": "string",
          "example": "getAccounts"
        },
        "message_format": {
          "type": "string",
          "example": "KafkaV2017"
        },
        "example_outbound_message": {
          "type": "string",
          "example": "This is a json String."
        },
        "outbound_topic": {
          "type": "string",
          "example": "to.obp.api.1.caseclass.OutboundGetAccounts"
        },
        "inbound_topic": {
          "type": "string",
          "example": "from.obp.api.1.to.adapter.mf.caseclass.OutboundGetAccounts"
        }
      }
    },
    "ConsumerJSON": {
      "required": [
        "created_by_user_id",
        "app_type",
        "description",
        "created_by_user",
        "enabled",
        "redirect_url",
        "developer_email",
        "consumer_id",
        "app_name",
        "created"
      ],
      "properties": {
        "created_by_user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "app_type": {
          "type": "string",
          "example": "Web"
        },
        "description": {
          "type": "string",
          "example": "Account Management"
        },
        "created_by_user": {
          "$ref": "#/definitions/ResourceUserJSON"
        },
        "enabled": {
          "type": "boolean",
          "example": "true"
        },
        "redirect_url": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "developer_email": {
          "type": "string",
          "example": "eveline@example.com"
        },
        "consumer_id": {
          "type": "integer",
          "format": "int64",
          "example": "1213"
        },
        "app_name": {
          "type": "string",
          "example": "SOFI"
        },
        "created": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "MetricJson": {
      "required": [
        "duration",
        "implemented_in_version",
        "url",
        "correlation_id",
        "implemented_by_partial_function",
        "user_id",
        "developer_email",
        "date",
        "consumer_id",
        "verb",
        "app_name",
        "user_name"
      ],
      "properties": {
        "duration": {
          "type": "integer",
          "format": "int64",
          "example": "39"
        },
        "implemented_in_version": {
          "type": "string",
          "example": "v210"
        },
        "url": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "correlation_id": {
          "type": "string",
          "example": "v8ho6h5ivel3uq7a5zcnv0w1"
        },
        "implemented_by_partial_function": {
          "type": "string",
          "example": "getBanks"
        },
        "user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "developer_email": {
          "type": "string",
          "example": "eveline@example.com"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "consumer_id": {
          "type": "string",
          "example": "123"
        },
        "verb": {
          "type": "string",
          "example": "get"
        },
        "app_name": {
          "type": "string",
          "example": "SOFI"
        },
        "user_name": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "CoreTransactionDetailsJSON": {
      "required": [
        "new_balance",
        "description",
        "completed",
        "type",
        "value",
        "posted"
      ],
      "properties": {
        "new_balance": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "description": {
          "type": "string",
          "example": "OBP"
        },
        "completed": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "type": {
          "type": "string",
          "example": "AC"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "posted": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "TransactionWhereJSON": {
      "required": [
        "where"
      ],
      "properties": {
        "where": {
          "$ref": "#/definitions/LocationJSONV121"
        }
      }
    },
    "TransactionJsonV300": {
      "required": [
        "this_account",
        "id",
        "details",
        "metadata",
        "other_account"
      ],
      "properties": {
        "this_account": {
          "$ref": "#/definitions/ThisAccountJsonV300"
        },
        "id": {
          "type": "string",
          "example": "String"
        },
        "details": {
          "$ref": "#/definitions/TransactionDetailsJSON"
        },
        "metadata": {
          "$ref": "#/definitions/TransactionMetadataJSON"
        },
        "other_account": {
          "$ref": "#/definitions/OtherAccountJsonV300"
        }
      }
    },
    "TransactionRequestIban": {
      "required": [
        "iban"
      ],
      "properties": {
        "iban": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "CreateAccountResponseJsonV310": {
      "required": [
        "account_routing",
        "account_attributes",
        "branch_id",
        "label",
        "balance",
        "user_id",
        "product_code",
        "account_id"
      ],
      "properties": {
        "account_routing": {
          "$ref": "#/definitions/AccountRoutingJsonV121"
        },
        "account_attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAttributeResponseJson"
          }
        },
        "branch_id": {
          "type": "string",
          "example": "DERBY6"
        },
        "label": {
          "type": "string",
          "example": "My Account"
        },
        "balance": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "product_code": {
          "type": "string",
          "example": "AC"
        },
        "account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        }
      }
    },
    "AccountWebhooksJson": {
      "required": [
        "web_hooks"
      ],
      "properties": {
        "web_hooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountWebhookJson"
          }
        }
      }
    },
    "PutUpdateCustomerCreditRatingAndSourceJsonV310": {
      "required": [
        "credit_rating",
        "credit_source"
      ],
      "properties": {
        "credit_rating": {
          "type": "string",
          "example": "Good"
        },
        "credit_source": {
          "type": "string",
          "example": "Bank"
        }
      }
    },
    "ElasticSearchJSON": {
      "required": [
        "metrics",
        "warehouse"
      ],
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricsJSON"
          }
        },
        "warehouse": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WarehouseJSON"
          }
        }
      }
    },
    "PostKycStatusJSON": {
      "required": [
        "customer_number",
        "ok",
        "date"
      ],
      "properties": {
        "customer_number": {
          "type": "string",
          "example": "5987953"
        },
        "ok": {
          "type": "boolean",
          "example": "true"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "OAuth2ServerJwksUrisJson": {
      "required": [
        "jwks_uris"
      ],
      "properties": {
        "jwks_uris": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OAuth2ServerJWKURIJson"
          }
        }
      }
    },
    "TransactionRequestAccount": {
      "required": [
        "bank_id",
        "account_id"
      ],
      "properties": {
        "bank_id": {
          "type": "string",
          "example": "String"
        },
        "account_id": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "PostTaxResidenceJsonV310": {
      "required": [
        "domain",
        "tax_number"
      ],
      "properties": {
        "domain": {
          "type": "string",
          "example": "Enter some domain"
        },
        "tax_number": {
          "type": "string",
          "example": "Enter some number"
        }
      }
    },
    "PermissionJSON": {
      "required": [
        "user",
        "views"
      ],
      "properties": {
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        },
        "views": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJSONV121"
          }
        }
      }
    },
    "MetricsJson": {
      "required": [
        "metrics"
      ],
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricJson"
          }
        }
      }
    },
    "ViewJSONV121": {
      "required": [
        "can_see_transaction_start_date",
        "can_add_url",
        "can_add_where_tag",
        "can_see_transaction_this_bank_account",
        "can_see_bank_account_owners",
        "can_see_private_alias",
        "can_edit_owner_comment",
        "can_see_other_account_national_identifier",
        "can_see_public_alias",
        "can_see_physical_location",
        "can_see_owner_comment",
        "can_see_bank_account_iban",
        "can_see_corporate_location",
        "can_see_bank_account_number",
        "can_see_other_account_bank_name",
        "description",
        "can_see_transaction_other_bank_account",
        "can_delete_corporate_location",
        "can_see_comments",
        "can_see_bank_account_bank_name",
        "can_add_more_info",
        "can_see_other_account_number",
        "can_see_other_account_swift_bic",
        "can_add_open_corporates_url",
        "can_see_other_account_kind",
        "can_delete_physical_location",
        "can_see_bank_account_label",
        "can_see_transaction_currency",
        "is_public",
        "can_see_transaction_finish_date",
        "can_add_tag",
        "can_see_images",
        "can_see_bank_account_currency",
        "hide_metadata_if_alias_used",
        "can_delete_where_tag",
        "alias",
        "can_add_image_url",
        "can_add_comment",
        "can_see_image_url",
        "id",
        "can_see_bank_account_national_identifier",
        "can_see_tags",
        "can_see_open_corporates_url",
        "short_name",
        "can_delete_tag",
        "can_see_more_info",
        "can_see_transaction_metadata",
        "can_delete_comment",
        "can_see_where_tag",
        "can_add_private_alias",
        "can_add_public_alias",
        "can_see_bank_account_swift_bic",
        "can_add_image",
        "can_see_transaction_type",
        "can_see_other_account_iban",
        "can_add_physical_location",
        "can_add_corporate_location",
        "can_delete_image",
        "can_see_url",
        "can_see_bank_account_balance",
        "can_see_transaction_balance",
        "can_see_transaction_amount",
        "can_see_other_account_metadata",
        "can_see_bank_account_type",
        "can_see_transaction_description"
      ],
      "properties": {
        "can_see_transaction_start_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_this_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_owners": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_edit_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "description": {
          "type": "string",
          "example": "description"
        },
        "can_see_transaction_other_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_comments": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_kind": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_label": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_currency": {
          "type": "boolean",
          "example": "true"
        },
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_finish_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_images": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_currency": {
          "type": "boolean",
          "example": "true"
        },
        "hide_metadata_if_alias_used": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "alias": {
          "type": "string",
          "example": "None"
        },
        "can_add_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "can_see_bank_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_tags": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "short_name": {
          "type": "string",
          "example": "short_name"
        },
        "can_delete_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_balance": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_balance": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_amount": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_description": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "OtherAccountJSON": {
      "required": [
        "number",
        "IBAN",
        "swift_bic",
        "holder",
        "bank",
        "id",
        "metadata",
        "kind"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "123"
        },
        "IBAN": {
          "type": "string",
          "example": "UK234DB"
        },
        "swift_bic": {
          "type": "string",
          "example": "UK12321DB"
        },
        "holder": {
          "$ref": "#/definitions/AccountHolderJSON"
        },
        "bank": {
          "$ref": "#/definitions/MinimalBankJSON"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "metadata": {
          "$ref": "#/definitions/OtherAccountMetadataJSON"
        },
        "kind": {
          "type": "string",
          "example": "3456"
        }
      }
    },
    "RedisCallLimitJson": {
      "properties": {
        "per_week": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateLimit"
          }
        },
        "per_second": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateLimit"
          }
        },
        "per_month": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateLimit"
          }
        },
        "per_day": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateLimit"
          }
        },
        "per_minute": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateLimit"
          }
        },
        "per_hour": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateLimit"
          }
        }
      }
    },
    "PostCustomerPhoneNumberJsonV400": {
      "required": [
        "mobile_phone_number"
      ],
      "properties": {
        "mobile_phone_number": {
          "type": "string",
          "example": "+44 07972 444 876"
        }
      }
    },
    "CoreTransactionJsonV300": {
      "required": [
        "id",
        "this_account",
        "other_account",
        "details"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "this_account": {
          "$ref": "#/definitions/ThisAccountJsonV300"
        },
        "other_account": {
          "$ref": "#/definitions/CoreCounterpartyJsonV300"
        },
        "details": {
          "$ref": "#/definitions/CoreTransactionDetailsJSON"
        }
      }
    },
    "ReplacementJSON": {
      "required": [
        "requested_date",
        "reason_requested"
      ],
      "properties": {
        "requested_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "reason_requested": {
          "type": "string",
          "example": "RENEW"
        }
      }
    },
    "MessageDocsJson": {
      "required": [
        "message_docs"
      ],
      "properties": {
        "message_docs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageDocJson"
          }
        }
      }
    },
    "MetricsJSON": {
      "required": [
        "property",
        "value"
      ],
      "properties": {
        "property": {
          "type": "string",
          "example": "String"
        },
        "value": {
          "type": "string",
          "example": "Mapper"
        }
      }
    },
    "BankJSON": {
      "required": [
        "website",
        "full_name",
        "logo",
        "id",
        "short_name",
        "bank_routing"
      ],
      "properties": {
        "website": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "full_name": {
          "type": "string",
          "example": "full_name"
        },
        "logo": {
          "type": "string",
          "example": "logo"
        },
        "id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "short_name": {
          "type": "string",
          "example": "short_name "
        },
        "bank_routing": {
          "$ref": "#/definitions/BankRoutingJsonV121"
        }
      }
    },
    "StandingOrderJsonV400": {
      "required": [
        "date_starts",
        "customer_id",
        "standing_order_id",
        "date_cancelled",
        "date_signed",
        "user_id",
        "amount",
        "bank_id",
        "account_id",
        "date_expires",
        "counterparty_id",
        "active"
      ],
      "properties": {
        "date_starts": {
          "type": "string",
          "format": "date",
          "example": "2020-02-17T10:52:56Z"
        },
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "standing_order_id": {
          "type": "string",
          "example": "aa0533bd-eb22-4bff-af75-d45240361b05"
        },
        "date_cancelled": {
          "type": "string",
          "format": "date",
          "example": "2020-02-17T10:52:56Z"
        },
        "date_signed": {
          "type": "string",
          "format": "date",
          "example": "2020-02-17T10:52:56Z"
        },
        "user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "amount": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "date_expires": {
          "type": "string",
          "format": "date",
          "example": "2020-02-17T10:52:56Z"
        },
        "counterparty_id": {
          "type": "string",
          "example": "9fg8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "active": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "BankId": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "gh.uk.9j"
        }
      }
    },
    "AliasJSON": {
      "required": [
        "alias"
      ],
      "properties": {
        "alias": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "ViewsJsonV300": {
      "required": [
        "views"
      ],
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJsonV300"
          }
        }
      }
    },
    "BankRoutingJsonV121": {
      "required": [
        "scheme",
        "address"
      ],
      "properties": {
        "scheme": {
          "type": "string",
          "example": "Bank_ID"
        },
        "address": {
          "type": "string",
          "example": "gh.29.uk"
        }
      }
    },
    "TransactionImagesJSON": {
      "required": [
        "images"
      ],
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionImageJSON"
          }
        }
      }
    },
    "PostHistoricalTransactionResponseJson": {
      "required": [
        "description",
        "to",
        "transaction_id",
        "transaction_request_type",
        "completed",
        "charge_policy",
        "from",
        "value",
        "posted"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "this is for work"
        },
        "to": {
          "$ref": "#/definitions/TransactionRequestAccountJsonV140"
        },
        "transaction_id": {
          "type": "string",
          "example": "123"
        },
        "transaction_request_type": {
          "type": "string",
          "example": "SANDBOX_TAN"
        },
        "completed": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "charge_policy": {
          "type": "string",
          "example": "SHARED"
        },
        "from": {
          "$ref": "#/definitions/TransactionRequestAccountJsonV140"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "posted": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "CustomerJsonV310": {
      "required": [
        "customer_id",
        "name_suffix",
        "email",
        "branch_id",
        "mobile_phone_number",
        "customer_number",
        "highest_education_attained",
        "dob_of_dependants",
        "bank_id",
        "date_of_birth",
        "last_ok_date",
        "employment_status",
        "legal_name",
        "title",
        "face_image",
        "dependants",
        "relationship_status",
        "kyc_status"
      ],
      "properties": {
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "name_suffix": {
          "type": "string",
          "example": "Sr"
        },
        "email": {
          "type": "string",
          "example": "eveline@example.com"
        },
        "branch_id": {
          "type": "string",
          "example": "DERBY6"
        },
        "mobile_phone_number": {
          "type": "string",
          "example": "+44 07972 444 876"
        },
        "customer_number": {
          "type": "string",
          "example": "5987953"
        },
        "highest_education_attained": {
          "type": "string",
          "example": "Master"
        },
        "dob_of_dependants": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          }
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "credit_rating": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerCreditRatingJSON"
          }
        },
        "last_ok_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "employment_status": {
          "type": "string",
          "example": "worker"
        },
        "legal_name": {
          "type": "string",
          "example": "Eveline Tripman"
        },
        "credit_limit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmountOfMoneyJsonV121"
          }
        },
        "title": {
          "type": "string",
          "example": "Dr."
        },
        "face_image": {
          "$ref": "#/definitions/CustomerFaceImageJson"
        },
        "dependants": {
          "type": "integer",
          "format": "int32",
          "example": "10"
        },
        "relationship_status": {
          "type": "string",
          "example": "single"
        },
        "kyc_status": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "PhysicalCardsJSON": {
      "required": [
        "cards"
      ],
      "properties": {
        "cards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhysicalCardJSON"
          }
        }
      }
    },
    "AccountIdJson": {
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        }
      }
    },
    "TransactionRequestBodyCounterpartyJSON": {
      "required": [
        "description",
        "to",
        "charge_policy",
        "value"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "A description for the transaction to the counterparty"
        },
        "future_date": {
          "type": "string",
          "example": "20881230"
        },
        "to": {
          "$ref": "#/definitions/CounterpartyIdJson"
        },
        "charge_policy": {
          "type": "string",
          "example": "SHARED"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        }
      }
    },
    "ViewBasic": {
      "required": [
        "id",
        "name",
        "description"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "owner"
        },
        "name": {
          "type": "string",
          "example": "Owner"
        },
        "description": {
          "type": "string",
          "example": "This view is for the owner for the account."
        }
      }
    },
    "PostTransactionTagJSON": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "CreditLimitOrderResponseJson": {
      "required": [
        "execution_time",
        "execution_date",
        "token",
        "short_reference"
      ],
      "properties": {
        "execution_time": {
          "type": "string",
          "example": "String"
        },
        "execution_date": {
          "type": "string",
          "example": "String"
        },
        "token": {
          "type": "string",
          "example": "String"
        },
        "short_reference": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "OtherAccountMetadataJSON": {
      "required": [
        "public_alias",
        "image_URL",
        "physical_location",
        "private_alias",
        "URL",
        "more_info",
        "corporate_location",
        "open_corporates_URL"
      ],
      "properties": {
        "public_alias": {
          "type": "string",
          "example": "NONE"
        },
        "image_URL": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "physical_location": {
          "$ref": "#/definitions/LocationJSONV121"
        },
        "private_alias": {
          "type": "string",
          "example": "NONE"
        },
        "URL": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "more_info": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "corporate_location": {
          "$ref": "#/definitions/LocationJSONV121"
        },
        "open_corporates_URL": {
          "type": "string",
          "example": "www.openbankproject.com"
        }
      }
    },
    "ViewJSONV220": {
      "required": [
        "can_see_transaction_start_date",
        "can_add_url",
        "can_add_where_tag",
        "can_see_transaction_this_bank_account",
        "can_see_bank_account_owners",
        "can_see_private_alias",
        "can_edit_owner_comment",
        "can_see_other_account_national_identifier",
        "can_see_public_alias",
        "can_see_physical_location",
        "can_see_owner_comment",
        "can_see_bank_account_iban",
        "can_see_corporate_location",
        "can_see_bank_account_number",
        "can_see_other_account_bank_name",
        "description",
        "can_see_transaction_other_bank_account",
        "can_delete_corporate_location",
        "can_see_comments",
        "can_see_bank_account_bank_name",
        "can_add_more_info",
        "can_see_other_account_number",
        "can_see_other_account_swift_bic",
        "can_add_open_corporates_url",
        "can_see_other_account_kind",
        "can_delete_physical_location",
        "can_see_bank_account_label",
        "can_see_transaction_currency",
        "is_public",
        "can_see_transaction_finish_date",
        "can_add_tag",
        "can_see_images",
        "can_see_bank_account_currency",
        "hide_metadata_if_alias_used",
        "can_delete_where_tag",
        "alias",
        "can_add_image_url",
        "can_add_comment",
        "can_see_image_url",
        "id",
        "can_see_bank_account_national_identifier",
        "can_add_counterparty",
        "can_see_tags",
        "can_see_open_corporates_url",
        "short_name",
        "can_delete_tag",
        "can_see_more_info",
        "can_see_transaction_metadata",
        "can_delete_comment",
        "can_see_where_tag",
        "can_add_private_alias",
        "can_add_public_alias",
        "can_see_bank_account_swift_bic",
        "can_add_image",
        "can_see_transaction_type",
        "can_see_other_account_iban",
        "can_add_physical_location",
        "can_add_corporate_location",
        "can_delete_image",
        "can_see_url",
        "can_see_bank_account_balance",
        "can_see_transaction_balance",
        "can_see_transaction_amount",
        "can_see_other_account_metadata",
        "can_see_bank_account_type",
        "can_see_transaction_description"
      ],
      "properties": {
        "can_see_transaction_start_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_this_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_owners": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_edit_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "description": {
          "type": "string",
          "example": "description"
        },
        "can_see_transaction_other_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_comments": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_kind": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_label": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_currency": {
          "type": "boolean",
          "example": "true"
        },
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_finish_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_images": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_currency": {
          "type": "boolean",
          "example": "true"
        },
        "hide_metadata_if_alias_used": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "alias": {
          "type": "string",
          "example": "No"
        },
        "can_add_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "id": {
          "type": "string",
          "example": "1234"
        },
        "can_see_bank_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_counterparty": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_tags": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "short_name": {
          "type": "string",
          "example": "short_name"
        },
        "can_delete_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_balance": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_balance": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_amount": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_description": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "CoreAccountsHeldJsonV300": {
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountHeldJson"
          }
        }
      }
    },
    "UpdateAccountResponseJsonV310": {
      "required": [
        "account_routing",
        "branch_id",
        "label",
        "bank_id",
        "account_id",
        "type"
      ],
      "properties": {
        "account_routing": {
          "$ref": "#/definitions/AccountRoutingJsonV121"
        },
        "branch_id": {
          "type": "string",
          "example": "1234"
        },
        "label": {
          "type": "string",
          "example": "Label"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "type": {
          "type": "string",
          "example": "CURRENT"
        }
      }
    },
    "PutUpdateCustomerIdentityJsonV310": {
      "required": [
        "legal_name",
        "date_of_birth",
        "title",
        "name_suffix"
      ],
      "properties": {
        "legal_name": {
          "type": "string",
          "example": "Eveline Tripman"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "title": {
          "type": "string",
          "example": "Dr."
        },
        "name_suffix": {
          "type": "string",
          "example": "Sr"
        }
      }
    },
    "BasicAccountsJSON": {
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BasicAccountJSON"
          }
        }
      }
    },
    "CounterpartyWithMetadataJson": {
      "required": [
        "other_account_routing_address",
        "other_account_routing_scheme",
        "created_by_user_id",
        "name",
        "other_account_secondary_routing_address",
        "is_beneficiary",
        "description",
        "other_branch_routing_address",
        "bespoke",
        "other_bank_routing_scheme",
        "other_branch_routing_scheme",
        "this_account_id",
        "this_view_id",
        "metadata",
        "other_bank_routing_address",
        "this_bank_id",
        "counterparty_id",
        "other_account_secondary_routing_scheme"
      ],
      "properties": {
        "other_account_routing_address": {
          "type": "string",
          "example": "7987987-2348987-234234"
        },
        "other_account_routing_scheme": {
          "type": "string",
          "example": "accountNumber"
        },
        "created_by_user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "name": {
          "type": "string",
          "example": "CounterpartyName"
        },
        "other_account_secondary_routing_address": {
          "type": "string",
          "example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
        },
        "is_beneficiary": {
          "type": "boolean",
          "example": "true"
        },
        "description": {
          "type": "string",
          "example": "My landlord"
        },
        "other_branch_routing_address": {
          "type": "string",
          "example": "10010"
        },
        "bespoke": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostCounterpartyBespokeJson"
          }
        },
        "other_bank_routing_scheme": {
          "type": "string",
          "example": "bankCode"
        },
        "other_branch_routing_scheme": {
          "type": "string",
          "example": "branchNumber"
        },
        "this_account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "this_view_id": {
          "type": "string",
          "example": "owner"
        },
        "metadata": {
          "$ref": "#/definitions/CounterpartyMetadataJson"
        },
        "other_bank_routing_address": {
          "type": "string",
          "example": "10"
        },
        "this_bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "counterparty_id": {
          "type": "string",
          "example": "1d65db7c-a7b2-4839-af41-958276ab7790"
        },
        "other_account_secondary_routing_scheme": {
          "type": "string",
          "example": "accountId"
        }
      }
    },
    "TransactionRequestCounterpartyId": {
      "required": [
        "counterparty_id"
      ],
      "properties": {
        "counterparty_id": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "TransactionRequestBody": {
      "required": [
        "to",
        "value",
        "description"
      ],
      "properties": {
        "to": {
          "$ref": "#/definitions/TransactionRequestAccount"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoney"
        },
        "description": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "ViewJsonV300": {
      "required": [
        "can_see_transaction_start_date",
        "can_add_url",
        "can_add_where_tag",
        "can_see_transaction_this_bank_account",
        "can_see_bank_account_owners",
        "can_see_bank_routing_address",
        "can_see_private_alias",
        "can_edit_owner_comment",
        "can_see_other_account_national_identifier",
        "can_see_bank_routing_scheme",
        "can_see_public_alias",
        "can_see_physical_location",
        "can_see_owner_comment",
        "can_see_bank_account_iban",
        "can_see_corporate_location",
        "can_see_bank_account_number",
        "can_see_other_account_bank_name",
        "description",
        "can_see_bank_account_routing_scheme",
        "can_see_transaction_other_bank_account",
        "can_delete_corporate_location",
        "can_see_comments",
        "can_see_bank_account_bank_name",
        "can_add_more_info",
        "can_create_direct_debit",
        "can_see_other_account_number",
        "can_see_other_account_swift_bic",
        "can_add_open_corporates_url",
        "can_see_other_account_kind",
        "can_add_transaction_request_to_own_account",
        "can_delete_physical_location",
        "can_see_bank_account_label",
        "can_see_transaction_currency",
        "is_public",
        "can_see_transaction_finish_date",
        "can_see_bank_account_routing_address",
        "can_add_tag",
        "can_see_images",
        "can_query_available_funds",
        "can_see_bank_account_credit_limit",
        "can_see_bank_account_currency",
        "hide_metadata_if_alias_used",
        "can_delete_where_tag",
        "alias",
        "can_add_image_url",
        "can_add_comment",
        "can_see_image_url",
        "id",
        "can_create_standing_order",
        "can_see_bank_account_national_identifier",
        "can_add_counterparty",
        "can_add_transaction_request_to_any_account",
        "can_see_tags",
        "can_see_open_corporates_url",
        "short_name",
        "can_delete_tag",
        "can_see_other_account_routing_scheme",
        "can_see_more_info",
        "can_see_transaction_metadata",
        "can_delete_comment",
        "can_see_where_tag",
        "can_add_private_alias",
        "can_add_public_alias",
        "can_see_bank_account_swift_bic",
        "can_add_image",
        "can_see_transaction_type",
        "can_see_other_account_routing_address",
        "can_see_other_account_iban",
        "can_add_physical_location",
        "can_add_corporate_location",
        "can_delete_image",
        "can_see_url",
        "can_see_bank_account_balance",
        "can_see_other_bank_routing_address",
        "can_see_transaction_balance",
        "metadata_view",
        "can_see_transaction_amount",
        "can_see_other_account_metadata",
        "can_see_bank_account_type",
        "can_see_other_bank_routing_scheme",
        "can_see_transaction_description"
      ],
      "properties": {
        "can_see_transaction_start_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_this_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_owners": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_routing_address": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_edit_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_routing_scheme": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "description": {
          "type": "string",
          "example": "description"
        },
        "can_see_bank_account_routing_scheme": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_other_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_comments": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_create_direct_debit": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_kind": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_transaction_request_to_own_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_label": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_currency": {
          "type": "boolean",
          "example": "true"
        },
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_finish_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_routing_address": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_images": {
          "type": "boolean",
          "example": "true"
        },
        "can_query_available_funds": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_credit_limit": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_currency": {
          "type": "boolean",
          "example": "true"
        },
        "hide_metadata_if_alias_used": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "alias": {
          "type": "string",
          "example": "No"
        },
        "can_add_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "id": {
          "type": "string",
          "example": "1234"
        },
        "can_create_standing_order": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_counterparty": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_transaction_request_to_any_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_tags": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "short_name": {
          "type": "string",
          "example": "short_name"
        },
        "can_delete_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_routing_scheme": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_routing_address": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_balance": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_bank_routing_address": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_balance": {
          "type": "boolean",
          "example": "true"
        },
        "metadata_view": {
          "type": "string",
          "example": "owner"
        },
        "can_see_transaction_amount": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_bank_routing_scheme": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_description": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "MinimalBankJSON": {
      "required": [
        "national_identifier",
        "name"
      ],
      "properties": {
        "national_identifier": {
          "type": "string",
          "example": "OBP"
        },
        "name": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "TransactionTypeId": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "CardObjectJson": {
      "required": [
        "card_type",
        "card_description",
        "use_type"
      ],
      "properties": {
        "card_type": {
          "type": "string",
          "example": "5"
        },
        "card_description": {
          "type": "string",
          "example": "good"
        },
        "use_type": {
          "type": "string",
          "example": "3"
        }
      }
    },
    "PhysicalCardJsonV310": {
      "required": [
        "allows",
        "expires_date",
        "networks",
        "customer_id",
        "issue_number",
        "replacement",
        "enabled",
        "collected",
        "card_number",
        "technology",
        "cancelled",
        "bank_id",
        "card_id",
        "pin_reset",
        "serial_number",
        "account",
        "valid_from_date",
        "name_on_card",
        "posted",
        "card_type",
        "on_hot_list"
      ],
      "properties": {
        "allows": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expires_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "networks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "issue_number": {
          "type": "string",
          "example": "1"
        },
        "replacement": {
          "$ref": "#/definitions/ReplacementJSON"
        },
        "enabled": {
          "type": "boolean",
          "example": "true"
        },
        "collected": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "card_number": {
          "type": "string",
          "example": "364435172576215"
        },
        "technology": {
          "type": "string",
          "example": "technologyString1"
        },
        "cancelled": {
          "type": "boolean",
          "example": "true"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "card_id": {
          "type": "string",
          "example": "36f8a9e6-c2b1-407a-8bd0-421b7119307e "
        },
        "pin_reset": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PinResetJSON"
          }
        },
        "serial_number": {
          "type": "string",
          "example": "1324234"
        },
        "account": {
          "$ref": "#/definitions/AccountJSON"
        },
        "valid_from_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "name_on_card": {
          "type": "string",
          "example": "SusanSmith"
        },
        "posted": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "card_type": {
          "type": "string",
          "example": "Credit"
        },
        "on_hot_list": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "PostKycCheckJSON": {
      "required": [
        "customer_number",
        "how",
        "date",
        "satisfied",
        "staff_user_id",
        "staff_name",
        "comments"
      ],
      "properties": {
        "customer_number": {
          "type": "string",
          "example": "5987953"
        },
        "how": {
          "type": "string",
          "example": "online_meeting"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "satisfied": {
          "type": "boolean",
          "example": "true"
        },
        "staff_user_id": {
          "type": "string",
          "example": "67876"
        },
        "staff_name": {
          "type": "string",
          "example": "Simon"
        },
        "comments": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "UserAuthContextJson": {
      "required": [
        "user_auth_context_id",
        "user_id",
        "key",
        "value"
      ],
      "properties": {
        "user_auth_context_id": {
          "type": "string",
          "example": "613c83ea-80f9-4560-8404-b9cd4ec42a7f"
        },
        "user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "key": {
          "type": "string",
          "example": "CUSTOMER_NUMBER"
        },
        "value": {
          "type": "string",
          "example": "78987432"
        }
      }
    },
    "ModeratedCoreAccountJsonV400": {
      "required": [
        "number",
        "account_attributes",
        "tags",
        "account_routings",
        "label",
        "owners",
        "balance",
        "views_basic",
        "product_code",
        "bank_id",
        "id"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "546387432"
        },
        "account_attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAttributeResponseJson"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountTagJSON"
          }
        },
        "account_routings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountRoutingJsonV121"
          }
        },
        "label": {
          "type": "string",
          "example": "My Account"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserJSONV121"
          }
        },
        "balance": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "views_basic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewBasicV300"
          }
        },
        "product_code": {
          "type": "string",
          "example": "AC"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        }
      }
    },
    "PutUpdateCustomerEmailJsonV310": {
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "marko@tesobe.com"
        }
      }
    },
    "PostCounterpartyBespokeJson": {
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string",
          "example": "englishName"
        },
        "value": {
          "type": "string",
          "example": "english Name"
        }
      }
    },
    "AddressJsonV300": {
      "required": [
        "city",
        "line_2",
        "state",
        "postcode",
        "county",
        "country_code",
        "line_3",
        "line_1"
      ],
      "properties": {
        "city": {
          "type": "string",
          "example": "Berlin"
        },
        "line_2": {
          "type": "string",
          "example": "The Place"
        },
        "state": {
          "type": "string",
          "example": "Brandenburg"
        },
        "postcode": {
          "type": "string",
          "example": "13359"
        },
        "county": {
          "type": "string",
          "example": ""
        },
        "country_code": {
          "type": "string",
          "example": "DE"
        },
        "line_3": {
          "type": "string",
          "example": "The Hill"
        },
        "line_1": {
          "type": "string",
          "example": "No 1 the Road"
        }
      }
    },
    "ProductCollectionJsonTreeV310": {
      "required": [
        "collection_code",
        "products"
      ],
      "properties": {
        "collection_code": {
          "type": "string",
          "example": "A"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductJsonV310"
          }
        }
      }
    },
    "ScopesJSON": {
      "required": [
        "require_scopes_for_all_roles",
        "require_scopes_for_listed_roles"
      ],
      "properties": {
        "require_scopes_for_all_roles": {
          "type": "boolean",
          "example": "true"
        },
        "require_scopes_for_listed_roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OtherAccountsJsonV300": {
      "required": [
        "other_accounts"
      ],
      "properties": {
        "other_accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherAccountJsonV300"
          }
        }
      }
    },
    "PutUpdateCustomerDataJsonV310": {
      "required": [
        "highest_education_attained",
        "employment_status",
        "face_image",
        "dependants",
        "relationship_status"
      ],
      "properties": {
        "highest_education_attained": {
          "type": "string",
          "example": "Master"
        },
        "employment_status": {
          "type": "string",
          "example": "worker"
        },
        "face_image": {
          "$ref": "#/definitions/CustomerFaceImageJson"
        },
        "dependants": {
          "type": "integer",
          "format": "int32",
          "example": "10"
        },
        "relationship_status": {
          "type": "string",
          "example": "single"
        }
      }
    },
    "ViewBasicV300": {
      "required": [
        "id",
        "short_name",
        "description",
        "is_public"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "owner"
        },
        "short_name": {
          "type": "string",
          "example": "Owner"
        },
        "description": {
          "type": "string",
          "example": "This view is for the owner for the account."
        },
        "is_public": {
          "type": "boolean",
          "example": "false"
        }
      }
    },
    "APIInfoJson400": {
      "required": [
        "version_status",
        "version",
        "hosted_at",
        "connector",
        "energy_source",
        "hosted_by",
        "git_commit"
      ],
      "properties": {
        "version_status": {
          "type": "string",
          "example": "String"
        },
        "version": {
          "type": "string",
          "example": "String"
        },
        "hosted_at": {
          "$ref": "#/definitions/HostedAt400"
        },
        "connector": {
          "type": "string",
          "example": "String"
        },
        "energy_source": {
          "$ref": "#/definitions/EnergySource400"
        },
        "hosted_by": {
          "$ref": "#/definitions/HostedBy400"
        },
        "git_commit": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "OAuth2ServerJWKURIJson": {
      "required": [
        "jwks_uri"
      ],
      "properties": {
        "jwks_uri": {
          "type": "string",
          "example": "https://www.googleapis.com/oauth2/v3/certs"
        }
      }
    },
    "ConsentJsonV310": {
      "required": [
        "consent_id",
        "jwt",
        "status"
      ],
      "properties": {
        "consent_id": {
          "type": "string",
          "example": "9d429899-24f5-42c8-8565-943ffa6a7945"
        },
        "jwt": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4"
        },
        "status": {
          "type": "string",
          "example": "INITIATED"
        }
      }
    },
    "AccountApplicationUpdateStatusJson": {
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "string",
          "example": "ACCEPTED"
        }
      }
    },
    "ConnectorMetricJson": {
      "required": [
        "connector_name",
        "duration",
        "function_name",
        "correlation_id",
        "date"
      ],
      "properties": {
        "connector_name": {
          "type": "string",
          "example": "mapper"
        },
        "duration": {
          "type": "integer",
          "format": "int64",
          "example": "1000"
        },
        "function_name": {
          "type": "string",
          "example": "getBanks"
        },
        "correlation_id": {
          "type": "string",
          "example": "12345"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "GlossaryItemJsonV300": {
      "required": [
        "title",
        "description"
      ],
      "properties": {
        "title": {
          "type": "string",
          "example": "Dr."
        },
        "description": {
          "$ref": "#/definitions/GlossaryDescriptionJsonV300"
        }
      }
    },
    "CustomerMessageJson": {
      "required": [
        "from_person",
        "id",
        "date",
        "from_department",
        "message"
      ],
      "properties": {
        "from_person": {
          "type": "string",
          "example": "String"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "from_department": {
          "type": "string",
          "example": "String"
        },
        "message": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "MeetingKeysJson": {
      "required": [
        "session_id",
        "staff_token",
        "customer_token"
      ],
      "properties": {
        "session_id": {
          "type": "string",
          "example": "String"
        },
        "staff_token": {
          "type": "string",
          "example": "String"
        },
        "customer_token": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "ToAccountTransferToAtm": {
      "required": [
        "legal_name",
        "date_of_birth",
        "mobile_phone_number",
        "kyc_document"
      ],
      "properties": {
        "legal_name": {
          "type": "string",
          "example": "Eveline Tripman"
        },
        "date_of_birth": {
          "type": "string",
          "example": "20181230"
        },
        "mobile_phone_number": {
          "type": "string",
          "example": "+44 07972 444 876"
        },
        "kyc_document": {
          "$ref": "#/definitions/ToAccountTransferToAtmKycDocument"
        }
      }
    },
    "PostConsentEmailJsonV310": {
      "required": [
        "everything",
        "views",
        "entitlements",
        "email"
      ],
      "properties": {
        "everything": {
          "type": "boolean",
          "example": "false"
        },
        "views": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJsonV400"
          }
        },
        "entitlements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitlementJsonV400"
          }
        },
        "email": {
          "type": "string",
          "example": "eveline@example.com"
        }
      }
    },
    "UrlJSON": {
      "required": [
        "URL"
      ],
      "properties": {
        "URL": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "CallLimitPostJson": {
      "required": [
        "per_month_call_limit",
        "per_week_call_limit",
        "per_hour_call_limit",
        "per_second_call_limit",
        "from_date",
        "per_minute_call_limit",
        "per_day_call_limit",
        "to_date"
      ],
      "properties": {
        "per_month_call_limit": {
          "type": "string",
          "example": "-1"
        },
        "per_week_call_limit": {
          "type": "string",
          "example": "-1"
        },
        "per_hour_call_limit": {
          "type": "string",
          "example": "-1"
        },
        "per_second_call_limit": {
          "type": "string",
          "example": "-1"
        },
        "from_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "per_minute_call_limit": {
          "type": "string",
          "example": "-1"
        },
        "per_day_call_limit": {
          "type": "string",
          "example": "-1"
        },
        "to_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "TransactionCommentJSON": {
      "required": [
        "id",
        "value",
        "date",
        "user"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "value": {
          "type": "string",
          "example": "OBP"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        }
      }
    },
    "PostAccountTagJSON": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "TransactionDetailsJSON": {
      "required": [
        "new_balance",
        "description",
        "completed",
        "type",
        "value",
        "posted"
      ],
      "properties": {
        "new_balance": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "description": {
          "type": "string",
          "example": "this is for family"
        },
        "completed": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "type": {
          "type": "string",
          "example": "AC"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "posted": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "HostedBy400": {
      "required": [
        "organisation",
        "email",
        "phone",
        "organisation_website"
      ],
      "properties": {
        "organisation": {
          "type": "string",
          "example": "String"
        },
        "email": {
          "type": "string",
          "example": "String"
        },
        "phone": {
          "type": "string",
          "example": "String"
        },
        "organisation_website": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "AtmJsonV300": {
      "required": [
        "sunday",
        "name",
        "location",
        "tuesday",
        "wednesday",
        "monday",
        "has_deposit_capability",
        "more_info",
        "bank_id",
        "id",
        "meta",
        "address",
        "friday",
        "is_accessible",
        "thursday",
        "saturday",
        "located_at"
      ],
      "properties": {
        "sunday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "name": {
          "type": "string",
          "example": "Atm by the Lake"
        },
        "location": {
          "$ref": "#/definitions/LocationJsonV140"
        },
        "tuesday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "wednesday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "monday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "has_deposit_capability": {
          "type": "string",
          "example": "true"
        },
        "more_info": {
          "type": "string",
          "example": "short walk to the lake from here"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "id": {
          "type": "string",
          "example": "atm-id-123"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "address": {
          "$ref": "#/definitions/AddressJsonV300"
        },
        "friday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "is_accessible": {
          "type": "string",
          "example": "true"
        },
        "thursday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "saturday": {
          "$ref": "#/definitions/OpeningTimesV300"
        },
        "located_at": {
          "type": "string",
          "example": "Full service store"
        }
      }
    },
    "CallLimitJson": {
      "required": [
        "per_month_call_limit",
        "per_week_call_limit",
        "per_hour_call_limit",
        "per_second_call_limit",
        "per_minute_call_limit",
        "per_day_call_limit"
      ],
      "properties": {
        "current_state": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RedisCallLimitJson"
          }
        },
        "per_month_call_limit": {
          "type": "string",
          "example": "-1"
        },
        "per_week_call_limit": {
          "type": "string",
          "example": "-1"
        },
        "per_hour_call_limit": {
          "type": "string",
          "example": "-1"
        },
        "per_second_call_limit": {
          "type": "string",
          "example": "-1"
        },
        "per_minute_call_limit": {
          "type": "string",
          "example": "-1"
        },
        "per_day_call_limit": {
          "type": "string",
          "example": "-1"
        }
      }
    },
    "ConsumerRedirectUrlJSON": {
      "required": [
        "redirect_url"
      ],
      "properties": {
        "redirect_url": {
          "type": "string",
          "example": "http://localhost:8888"
        }
      }
    },
    "BadLoginStatusJson": {
      "required": [
        "username",
        "bad_attempts_since_last_success_or_reset",
        "last_failure_date"
      ],
      "properties": {
        "username": {
          "type": "string",
          "example": "felixsmith"
        },
        "bad_attempts_since_last_success_or_reset": {
          "type": "integer",
          "format": "int32",
          "example": "0"
        },
        "last_failure_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "PutUpdateCustomerCreditLimitJsonV310": {
      "required": [
        "credit_limit"
      ],
      "properties": {
        "credit_limit": {
          "$ref": "#/definitions/AmountOfMoney"
        }
      }
    },
    "CheckFundsAvailableJson": {
      "required": [
        "answer",
        "date",
        "available_funds_request_id"
      ],
      "properties": {
        "answer": {
          "type": "string",
          "example": "yes"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2020-02-17T10:52:56Z"
        },
        "available_funds_request_id": {
          "type": "string",
          "example": "c4ykz59svsr9b7fmdxk8ezs7"
        }
      }
    },
    "SocialMediaJSON": {
      "required": [
        "date_activated",
        "customer_number",
        "date_added",
        "type",
        "handle"
      ],
      "properties": {
        "date_activated": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "customer_number": {
          "type": "string",
          "example": "5987953"
        },
        "date_added": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "type": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "handle": {
          "type": "string",
          "example": "PlaceholderString"
        }
      }
    },
    "ChallengeJsonV140": {
      "required": [
        "id",
        "allowed_attempts",
        "challenge_type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "be1a183d-b301-4b83-b855-5eeffdd3526f"
        },
        "allowed_attempts": {
          "type": "integer",
          "format": "int32",
          "example": "3"
        },
        "challenge_type": {
          "type": "string",
          "example": "SANDBOX_TAN"
        }
      }
    },
    "TaxResidenceJsonV310": {
      "required": [
        "tax_residence"
      ],
      "properties": {
        "tax_residence": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxResidenceV310"
          }
        }
      }
    },
    "EntitlementJSONs": {
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitlementJSON"
          }
        }
      }
    },
    "UserJSONV121": {
      "required": [
        "id",
        "provider",
        "display_name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "provider": {
          "type": "string",
          "example": "http://127.0.0.1:8080"
        },
        "display_name": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "ThisAccountJSON": {
      "required": [
        "number",
        "IBAN",
        "swift_bic",
        "bank",
        "id",
        "holders",
        "kind"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "123"
        },
        "IBAN": {
          "type": "string",
          "example": "UK1234AD"
        },
        "swift_bic": {
          "type": "string",
          "example": "UK1234AD"
        },
        "bank": {
          "$ref": "#/definitions/MinimalBankJSON"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "holders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountHolderJSON"
          }
        },
        "kind": {
          "type": "string",
          "example": "AC"
        }
      }
    },
    "CrmEventsJson": {
      "required": [
        "crm_events"
      ],
      "properties": {
        "crm_events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CrmEventJson"
          }
        }
      }
    },
    "CustomerMessagesJson": {
      "required": [
        "messages"
      ],
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerMessageJson"
          }
        }
      }
    },
    "CreateScopeJson": {
      "required": [
        "bank_id",
        "role_name"
      ],
      "properties": {
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "role_name": {
          "type": "string",
          "example": "CanGetEntitlementsForAnyUserAtOneBank"
        }
      }
    },
    "PutEnabledJSON": {
      "required": [
        "enabled"
      ],
      "properties": {
        "enabled": {
          "type": "boolean",
          "example": "false"
        }
      }
    },
    "AccountBasicV310": {
      "required": [
        "id",
        "label",
        "views_available",
        "bank_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "label": {
          "type": "string",
          "example": "My Account"
        },
        "views_available": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewBasic"
          }
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        }
      }
    },
    "ElasticSearchQuery": {
      "required": [
        "match_all"
      ],
      "properties": {
        "match_all": {
          "$ref": "#/definitions/EmptyElasticSearch"
        }
      }
    },
    "HostedAt400": {
      "required": [
        "organisation",
        "organisation_website"
      ],
      "properties": {
        "organisation": {
          "type": "string",
          "example": "Amazon"
        },
        "organisation_website": {
          "type": "string",
          "example": "https://aws.amazon.com/"
        }
      }
    },
    "LocationJsonV210": {
      "required": [
        "latitude",
        "longitude",
        "date",
        "user"
      ],
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "example": "11.45"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "example": "11.45"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "user": {
          "$ref": "#/definitions/UserJSONV210"
        }
      }
    },
    "CoreTransactionsJsonV300": {
      "required": [
        "transactions"
      ],
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoreTransactionJsonV300"
          }
        }
      }
    },
    "AccountApplicationResponseJson": {
      "required": [
        "date_of_application",
        "account_application_id",
        "product_code",
        "status",
        "customer",
        "user"
      ],
      "properties": {
        "date_of_application": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "account_application_id": {
          "type": "string",
          "example": "gc23a7e2-7dd2-4bdf-a0b4-ae31232a4763"
        },
        "product_code": {
          "type": "string",
          "example": "saveing1"
        },
        "status": {
          "type": "string",
          "example": "REQUESTED"
        },
        "customer": {
          "$ref": "#/definitions/CustomerJsonV310"
        },
        "user": {
          "$ref": "#/definitions/ResourceUserJSON"
        }
      }
    },
    "TransactionRequestTransferToAtm": {
      "required": [
        "description",
        "to",
        "from",
        "message",
        "value"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "String"
        },
        "to": {
          "$ref": "#/definitions/ToAccountTransferToAtm"
        },
        "from": {
          "$ref": "#/definitions/FromAccountTransfer"
        },
        "message": {
          "type": "string",
          "example": "String"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        }
      }
    },
    "KycCheckJSON": {
      "required": [
        "customer_id",
        "customer_number",
        "bank_id",
        "id",
        "how",
        "date",
        "satisfied",
        "staff_user_id",
        "staff_name",
        "comments"
      ],
      "properties": {
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "customer_number": {
          "type": "string",
          "example": "5987953"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "id": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "how": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "satisfied": {
          "type": "boolean",
          "example": "true"
        },
        "staff_user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "staff_name": {
          "type": "string",
          "example": "PlaceholderString"
        },
        "comments": {
          "type": "string",
          "example": "PlaceholderString"
        }
      }
    },
    "PostUserAuthContextJson": {
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string",
          "example": "CUSTOMER_NUMBER"
        },
        "value": {
          "type": "string",
          "example": "78987432"
        }
      }
    },
    "SepaCreditTransfers": {
      "required": [
        "debtorAccount",
        "instructedAmount",
        "creditorAccount",
        "creditorName"
      ],
      "properties": {
        "debtorAccount": {
          "$ref": "#/definitions/PaymentAccount"
        },
        "instructedAmount": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "creditorAccount": {
          "$ref": "#/definitions/PaymentAccount"
        },
        "creditorName": {
          "type": "string",
          "example": "John Miles"
        }
      }
    },
    "ToAccountTransferToAccount": {
      "required": [
        "name",
        "bank_code",
        "branch_number",
        "account"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "String"
        },
        "bank_code": {
          "type": "string",
          "example": "String"
        },
        "branch_number": {
          "type": "string",
          "example": "String"
        },
        "account": {
          "$ref": "#/definitions/ToAccountTransferToAccountAccount"
        }
      }
    },
    "TransactionImageJSON": {
      "required": [
        "URL",
        "label",
        "id",
        "date",
        "user"
      ],
      "properties": {
        "URL": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "label": {
          "type": "string",
          "example": "NONE"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        }
      }
    },
    "CreateAccountRequestJsonV310": {
      "required": [
        "account_routing",
        "account_attributes",
        "branch_id",
        "label",
        "balance",
        "user_id",
        "product_code"
      ],
      "properties": {
        "account_routing": {
          "$ref": "#/definitions/AccountRoutingJsonV121"
        },
        "account_attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAttributeResponseJson"
          }
        },
        "branch_id": {
          "type": "string",
          "example": "DERBY6"
        },
        "label": {
          "type": "string",
          "example": "My Account"
        },
        "balance": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "product_code": {
          "type": "string",
          "example": "AC"
        }
      }
    },
    "UserJSONV210": {
      "required": [
        "id",
        "provider",
        "username"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "123"
        },
        "provider": {
          "type": "string",
          "example": "http://127.0.0.1:8080"
        },
        "username": {
          "type": "string",
          "example": "felixsmith"
        }
      }
    },
    "PostConsentPhoneJsonV310": {
      "required": [
        "everything",
        "views",
        "entitlements",
        "phone_number"
      ],
      "properties": {
        "everything": {
          "type": "boolean",
          "example": "false"
        },
        "views": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJsonV400"
          }
        },
        "entitlements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitlementJsonV400"
          }
        },
        "phone_number": {
          "type": "string",
          "example": "+44 07972 444 876"
        }
      }
    },
    "CachedFunctionJSON": {
      "required": [
        "function_name",
        "ttl_in_seconds"
      ],
      "properties": {
        "function_name": {
          "type": "string",
          "example": "getBanks"
        },
        "ttl_in_seconds": {
          "type": "integer",
          "format": "int32",
          "example": "5"
        }
      }
    },
    "PostCustomerJsonV310": {
      "required": [
        "name_suffix",
        "email",
        "branch_id",
        "mobile_phone_number",
        "highest_education_attained",
        "dob_of_dependants",
        "date_of_birth",
        "credit_rating",
        "last_ok_date",
        "employment_status",
        "legal_name",
        "credit_limit",
        "title",
        "face_image",
        "dependants",
        "relationship_status",
        "kyc_status"
      ],
      "properties": {
        "name_suffix": {
          "type": "string",
          "example": "Sr"
        },
        "email": {
          "type": "string",
          "example": "eveline@example.com"
        },
        "branch_id": {
          "type": "string",
          "example": "DERBY6"
        },
        "mobile_phone_number": {
          "type": "string",
          "example": "+44 07972 444 876"
        },
        "highest_education_attained": {
          "type": "string",
          "example": "Master"
        },
        "dob_of_dependants": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          }
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "credit_rating": {
          "$ref": "#/definitions/CustomerCreditRatingJSON"
        },
        "last_ok_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "employment_status": {
          "type": "string",
          "example": "worker"
        },
        "legal_name": {
          "type": "string",
          "example": "Eveline Tripman"
        },
        "credit_limit": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "title": {
          "type": "string",
          "example": "Dr."
        },
        "face_image": {
          "$ref": "#/definitions/CustomerFaceImageJson"
        },
        "dependants": {
          "type": "integer",
          "format": "int32",
          "example": "10"
        },
        "relationship_status": {
          "type": "string",
          "example": "single"
        },
        "kyc_status": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "UsersJsonV200": {
      "required": [
        "users"
      ],
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserJsonV200"
          }
        }
      }
    },
    "CreditCardOrderStatusResponseJson": {
      "required": [
        "cards"
      ],
      "properties": {
        "cards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CardObjectJson"
          }
        }
      }
    },
    "MeetingPresentJson": {
      "required": [
        "staff_user_id",
        "customer_user_id"
      ],
      "properties": {
        "staff_user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "customer_user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        }
      }
    },
    "GlossaryItemsJsonV300": {
      "required": [
        "glossary_items"
      ],
      "properties": {
        "glossary_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GlossaryItemJsonV300"
          }
        }
      }
    },
    "CreateUserCustomerLinkJson": {
      "required": [
        "user_id",
        "customer_id"
      ],
      "properties": {
        "user_id": {
          "type": "string",
          "example": "9ca9a7e4-6d02-40e3-a129-0b2bf89de9b1"
        },
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        }
      }
    },
    "BranchRoutingJsonV141": {
      "required": [
        "scheme",
        "address"
      ],
      "properties": {
        "scheme": {
          "type": "string",
          "example": "BranchNumber"
        },
        "address": {
          "type": "string",
          "example": "678"
        }
      }
    },
    "ConfigurationJSON": {
      "required": [
        "akka",
        "elastic_search",
        "cache",
        "scopes"
      ],
      "properties": {
        "akka": {
          "$ref": "#/definitions/AkkaJSON"
        },
        "elastic_search": {
          "$ref": "#/definitions/ElasticSearchJSON"
        },
        "cache": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CachedFunctionJSON"
          }
        },
        "scopes": {
          "$ref": "#/definitions/ScopesJSON"
        }
      }
    },
    "AggregateMetricJSON": {
      "required": [
        "count",
        "average_response_time",
        "minimum_response_time",
        "maximum_response_time"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "example": "7076"
        },
        "average_response_time": {
          "type": "number",
          "format": "double",
          "example": "65.21"
        },
        "minimum_response_time": {
          "type": "number",
          "format": "double",
          "example": "1.0"
        },
        "maximum_response_time": {
          "type": "number",
          "format": "double",
          "example": "9039.0"
        }
      }
    },
    "ModeratedAccountJSON400": {
      "required": [
        "number",
        "account_routing",
        "account_attributes",
        "views_available",
        "tags",
        "label",
        "owners",
        "balance",
        "product_code",
        "bank_id",
        "id"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "123"
        },
        "account_routing": {
          "$ref": "#/definitions/AccountRoutingJsonV121"
        },
        "account_attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAttributeResponseJson"
          }
        },
        "views_available": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJSONV121"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountTagJSON"
          }
        },
        "label": {
          "type": "string",
          "example": "NoneLabel"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserJSONV121"
          }
        },
        "balance": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        },
        "product_code": {
          "type": "string",
          "example": "OBP"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        }
      }
    },
    "ScopeJsons": {
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScopeJson"
          }
        }
      }
    },
    "AccountHolderJSON": {
      "required": [
        "name",
        "is_alias"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "OBP"
        },
        "is_alias": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "SeverJWK": {
      "required": [
        "e",
        "n",
        "kty",
        "use",
        "kid"
      ],
      "properties": {
        "e": {
          "type": "string",
          "example": "AQAB"
        },
        "n": {
          "type": "string",
          "example": "hrB0OWqg6AeNU3WCnhheG18R5EbQtdNYGOaSeylTjkj2lZr0_vkhNVYvase-CroxO4HOT06InxTYwLnmJiyv2cZxReuoVjTlk--olGu-9MZooiFiqWez0JzndyKxQ27OiAjFsMh0P04kaUXeHKhXRfiU7K2FqBshR1UlnWe7iHLkq2p9rrGjxQc7ff0w-Uc0f-8PWg36Y2Od7s65493iVQwnI13egqMaSvgB1s8_dgm08noEjhr8C5m1aKmr5oipWEPNi-SBV2VNuiCLR1IEPuXq0tOwwZfv31t34KPO-2H2bbaWmzGJy9mMOGqoNrbXyGiUZoyeHRELaNtm1GilyQ"
        },
        "kty": {
          "type": "string",
          "example": "RSA"
        },
        "use": {
          "type": "string",
          "example": "sig"
        },
        "kid": {
          "type": "string",
          "example": "fr6-BxXH5gikFeZ2O6rGk0LUmJpukeswASN_TMW8U_s"
        }
      }
    },
    "ToAccountTransferToAccountAccount": {
      "required": [
        "number",
        "iban"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "String"
        },
        "iban": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "TransactionJSON": {
      "required": [
        "this_account",
        "id",
        "details",
        "metadata",
        "other_account"
      ],
      "properties": {
        "this_account": {
          "$ref": "#/definitions/ThisAccountJSON"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "details": {
          "$ref": "#/definitions/TransactionDetailsJSON"
        },
        "metadata": {
          "$ref": "#/definitions/TransactionMetadataJSON"
        },
        "other_account": {
          "$ref": "#/definitions/OtherAccountJSON"
        }
      }
    },
    "AccountRuleJsonV300": {
      "required": [
        "scheme",
        "value"
      ],
      "properties": {
        "scheme": {
          "type": "string",
          "example": "OVERDRAFT"
        },
        "value": {
          "type": "string",
          "example": "10"
        }
      }
    },
    "KycStatusJSON": {
      "required": [
        "customer_id",
        "customer_number",
        "ok",
        "date"
      ],
      "properties": {
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "customer_number": {
          "type": "string",
          "example": "5987953"
        },
        "ok": {
          "type": "boolean",
          "example": "true"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "InviteeJson": {
      "required": [
        "contact_details",
        "status"
      ],
      "properties": {
        "contact_details": {
          "$ref": "#/definitions/ContactDetailsJson"
        },
        "status": {
          "type": "string",
          "example": "String, eg: Good"
        }
      }
    },
    "ToAccountTransferToPhone": {
      "required": [
        "mobile_phone_number"
      ],
      "properties": {
        "mobile_phone_number": {
          "type": "string",
          "example": "+44 07972 444 876"
        }
      }
    },
    "ScopeJson": {
      "required": [
        "scope_id",
        "role_name",
        "bank_id"
      ],
      "properties": {
        "scope_id": {
          "type": "string",
          "example": "88625da4-a671-435e-9d24-e5b6e5cc404f"
        },
        "role_name": {
          "type": "string",
          "example": "CanGetEntitlementsForAnyUserAtOneBank"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        }
      }
    },
    "TransactionsJsonV300": {
      "required": [
        "transactions"
      ],
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionJsonV300"
          }
        }
      }
    },
    "CreateMeetingJsonV310": {
      "required": [
        "provider_id",
        "creator",
        "invitees",
        "date",
        "purpose_id"
      ],
      "properties": {
        "provider_id": {
          "type": "string",
          "example": "Chris"
        },
        "creator": {
          "$ref": "#/definitions/ContactDetailsJson"
        },
        "invitees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InviteeJson"
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "purpose_id": {
          "type": "string",
          "example": "String, eg: onboarding"
        }
      }
    },
    "ObpApiLoopbackJson": {
      "required": [
        "connector_version",
        "git_commit",
        "duration_time"
      ],
      "properties": {
        "connector_version": {
          "type": "string",
          "example": "kafka_vSept2018"
        },
        "git_commit": {
          "type": "string",
          "example": "f0acd4be14cdcb94be3433ec95c1ad65228812a0"
        },
        "duration_time": {
          "type": "string",
          "example": "10 ms"
        }
      }
    },
    "CustomerJsonV210": {
      "required": [
        "customer_id",
        "email",
        "mobile_phone_number",
        "customer_number",
        "highest_education_attained",
        "dob_of_dependants",
        "bank_id",
        "date_of_birth",
        "last_ok_date",
        "employment_status",
        "legal_name",
        "face_image",
        "dependants",
        "relationship_status",
        "kyc_status"
      ],
      "properties": {
        "customer_id": {
          "type": "string",
          "example": "7uy8a7e4-6d02-40e3-a129-0b2bf89de8uh"
        },
        "email": {
          "type": "string",
          "example": "eveline@example.com"
        },
        "mobile_phone_number": {
          "type": "string",
          "example": "+44 07972 444 876"
        },
        "customer_number": {
          "type": "string",
          "example": "5987953"
        },
        "highest_education_attained": {
          "type": "string",
          "example": "Master"
        },
        "dob_of_dependants": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          }
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "credit_rating": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerCreditRatingJSON"
          }
        },
        "last_ok_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "employment_status": {
          "type": "string",
          "example": "worker"
        },
        "legal_name": {
          "type": "string",
          "example": "Eveline Tripman"
        },
        "credit_limit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AmountOfMoneyJsonV121"
          }
        },
        "face_image": {
          "$ref": "#/definitions/CustomerFaceImageJson"
        },
        "dependants": {
          "type": "integer",
          "format": "int32",
          "example": "10"
        },
        "relationship_status": {
          "type": "string",
          "example": "single"
        },
        "kyc_status": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "TransactionRequestTypesJSON": {
      "required": [
        "transaction_request_types"
      ],
      "properties": {
        "transaction_request_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRequestTypeJSONV210"
          }
        }
      }
    },
    "EntitlementRequestJSON": {
      "required": [
        "entitlement_request_id",
        "role_name",
        "bank_id",
        "user",
        "created"
      ],
      "properties": {
        "entitlement_request_id": {
          "type": "string",
          "example": "6fb17583-1e49-4435-bb74-a14fe0996723"
        },
        "role_name": {
          "type": "string",
          "example": "CanQueryOtherUser"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "user": {
          "$ref": "#/definitions/UserJsonV200"
        },
        "created": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        }
      }
    },
    "TransactionCommentsJSON": {
      "required": [
        "comments"
      ],
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionCommentJSON"
          }
        }
      }
    },
    "TransactionNarrativeJSON": {
      "required": [
        "narrative"
      ],
      "properties": {
        "narrative": {
          "type": "string",
          "example": "narative"
        }
      }
    },
    "UpdateAccountJSON": {
      "required": [
        "id",
        "label",
        "bank_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "123123"
        },
        "label": {
          "type": "string",
          "example": "label"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        }
      }
    },
    "ConnectorMetricsJson": {
      "required": [
        "metrics"
      ],
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectorMetricJson"
          }
        }
      }
    },
    "SocialMediasJSON": {
      "required": [
        "checks"
      ],
      "properties": {
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SocialMediaJSON"
          }
        }
      }
    },
    "PhysicalLocationJSON": {
      "required": [
        "physical_location"
      ],
      "properties": {
        "physical_location": {
          "$ref": "#/definitions/LocationPlainJSON"
        }
      }
    },
    "CoreAccountsJsonV300": {
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoreAccountJson"
          }
        }
      }
    },
    "UserAuthContextsJson": {
      "required": [
        "user_auth_contexts"
      ],
      "properties": {
        "user_auth_contexts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAuthContextJson"
          }
        }
      }
    },
    "PermissionsJSON": {
      "required": [
        "permissions"
      ],
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionJSON"
          }
        }
      }
    },
    "FromAccountTransfer": {
      "required": [
        "mobile_phone_number",
        "nickname"
      ],
      "properties": {
        "mobile_phone_number": {
          "type": "string",
          "example": "+44 07972 444 876"
        },
        "nickname": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "LocationJSONV121": {
      "required": [
        "latitude",
        "longitude",
        "date",
        "user"
      ],
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "example": "1.231"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "example": "1.231"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        }
      }
    },
    "ModeratedCoreAccountsJsonV300": {
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModeratedCoreAccountJsonV300"
          }
        }
      }
    },
    "EntitlementJSON": {
      "required": [
        "entitlement_id",
        "role_name",
        "bank_id"
      ],
      "properties": {
        "entitlement_id": {
          "type": "string",
          "example": "6fb17583-1e49-4435-bb74-a14fe0996723"
        },
        "role_name": {
          "type": "string",
          "example": "CanQueryOtherUser"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        }
      }
    },
    "LocationPlainJSON": {
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "example": "1.532"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "example": "1.535"
        }
      }
    },
    "TransactionRequestTransferToPhone": {
      "required": [
        "description",
        "to",
        "from",
        "message",
        "value"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "String"
        },
        "to": {
          "$ref": "#/definitions/ToAccountTransferToPhone"
        },
        "from": {
          "$ref": "#/definitions/FromAccountTransfer"
        },
        "message": {
          "type": "string",
          "example": "String"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJsonV121"
        }
      }
    },
    "TopApiJson": {
      "required": [
        "count",
        "Implemented_by_partial_function",
        "implemented_in_version"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "example": "7076"
        },
        "Implemented_by_partial_function": {
          "type": "string",
          "example": "getBanks"
        },
        "implemented_in_version": {
          "type": "string",
          "example": "v1.2.1"
        }
      }
    },
    "TransactionRequestWithChargeJSON210": {
      "required": [
        "challenge",
        "start_date",
        "id",
        "end_date",
        "status",
        "from",
        "details",
        "charge",
        "type",
        "transaction_ids"
      ],
      "properties": {
        "challenge": {
          "$ref": "#/definitions/ChallengeJsonV140"
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "id": {
          "type": "string",
          "example": "4050046c-63b3-4868-8a22-14b4181d33a6"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "status": {
          "type": "string",
          "example": "COMPLETED"
        },
        "from": {
          "$ref": "#/definitions/TransactionRequestAccountJsonV140"
        },
        "details": {
          "$ref": "#/definitions/TransactionRequestBodyAllTypes"
        },
        "charge": {
          "$ref": "#/definitions/TransactionRequestChargeJsonV200"
        },
        "type": {
          "type": "string",
          "example": "SANDBOX_TAN"
        },
        "transaction_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AccountAttributeJson": {
      "required": [
        "name",
        "type",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "OVERDRAFT_START_DATE"
        },
        "type": {
          "type": "string",
          "example": "DATE_WITH_DAY"
        },
        "value": {
          "type": "string",
          "example": "2012-04-23"
        }
      }
    },
    "PhysicalCardJSON": {
      "required": [
        "allows",
        "expires_date",
        "networks",
        "issue_number",
        "replacement",
        "enabled",
        "collected",
        "technology",
        "cancelled",
        "bank_id",
        "pin_reset",
        "serial_number",
        "account",
        "valid_from_date",
        "bank_card_number",
        "name_on_card",
        "posted",
        "on_hot_list"
      ],
      "properties": {
        "allows": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expires_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "networks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "issue_number": {
          "type": "string",
          "example": "1"
        },
        "replacement": {
          "$ref": "#/definitions/ReplacementJSON"
        },
        "enabled": {
          "type": "boolean",
          "example": "true"
        },
        "collected": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "technology": {
          "type": "string",
          "example": "String"
        },
        "cancelled": {
          "type": "boolean",
          "example": "true"
        },
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "pin_reset": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PinResetJSON"
          }
        },
        "serial_number": {
          "type": "string",
          "example": "1324234"
        },
        "account": {
          "$ref": "#/definitions/AccountJSON"
        },
        "valid_from_date": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "bank_card_number": {
          "type": "string",
          "example": "364435172576215"
        },
        "name_on_card": {
          "type": "string",
          "example": "String"
        },
        "posted": {
          "type": "string",
          "format": "date",
          "example": "2017-09-19T00:00:00Z"
        },
        "on_hot_list": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "ViewsJSONV121": {
      "required": [
        "views"
      ],
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJSONV121"
          }
        }
      }
    },
    "PostPutProductJsonV310": {
      "required": [
        "name",
        "description",
        "more_info_url",
        "super_family",
        "meta",
        "details",
        "category",
        "family",
        "parent_product_code"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "product name"
        },
        "description": {
          "type": "string",
          "example": "Description"
        },
        "more_info_url": {
          "type": "string",
          "example": "www.example.com/prod1/more-info.html"
        },
        "super_family": {
          "type": "string",
          "example": "super family"
        },
        "meta": {
          "$ref": "#/definitions/MetaJsonV140"
        },
        "details": {
          "type": "string",
          "example": "Details"
        },
        "category": {
          "type": "string",
          "example": "category"
        },
        "family": {
          "type": "string",
          "example": "family"
        },
        "parent_product_code": {
          "type": "string",
          "example": "parent product name"
        }
      }
    },
    "KycDocumentsJSON": {
      "required": [
        "documents"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KycDocumentJSON"
          }
        }
      }
    },
    "OpeningTimesV300": {
      "required": [
        "opening_time",
        "closing_time"
      ],
      "properties": {
        "opening_time": {
          "type": "string",
          "example": "10:00"
        },
        "closing_time": {
          "type": "string",
          "example": "18:00"
        }
      }
    },
    "TopConsumersJson": {
      "required": [
        "top_consumers"
      ],
      "properties": {
        "top_consumers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopConsumerJson"
          }
        }
      }
    },
    "ConsentsJsonV310": {
      "required": [
        "consents"
      ],
      "properties": {
        "consents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsentJsonV310"
          }
        }
      }
    },
    "SandboxUserImport": {
      "required": [
        "email",
        "password",
        "user_name"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "user1@example.com"
        },
        "password": {
          "type": "string",
          "example": "TESOBE520berlin123!"
        },
        "user_name": {
          "type": "string",
          "example": "User 1"
        }
      }
    },
    "SandboxBankImport": {
      "required": [
        "website",
        "full_name",
        "logo",
        "id",
        "short_name"
      ],
      "properties": {
        "website": {
          "type": "string",
          "example": "http://example.com/2"
        },
        "full_name": {
          "type": "string",
          "example": "Bank 2 Inc."
        },
        "logo": {
          "type": "string",
          "example": "http://example.com/logo2"
        },
        "id": {
          "type": "string",
          "example": "bank2"
        },
        "short_name": {
          "type": "string",
          "example": "bank 2"
        }
      }
    },
    "SandboxTransactionImport": {
      "required": [
        "id",
        "this_account",
        "details"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "blankCounterpartNameTransaction"
        },
        "this_account": {
          "$ref": "#/definitions/SandboxAccountIdImport"
        },
        "counterparty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SandboxTransactionCounterparty"
          }
        },
        "details": {
          "$ref": "#/definitions/SandboxAccountDetailsImport"
        }
      }
    },
    "SandboxTransactionCounterparty": {
      "properties": {
        "name": {
          "type": "string",
          "example": "Acme Inc."
        },
        "account_number": {
          "type": "string",
          "example": "12345-B"
        }
      }
    },
    "SandboxAccountDetailsImport": {
      "required": [
        "new_balance",
        "description",
        "completed",
        "type",
        "value",
        "posted"
      ],
      "properties": {
        "new_balance": {
          "type": "string",
          "example": "1244.00"
        },
        "description": {
          "type": "string",
          "example": "some description"
        },
        "completed": {
          "type": "string",
          "example": "2012-04-07T00:00:00.001Z"
        },
        "type": {
          "type": "string",
          "example": "SEPA"
        },
        "value": {
          "type": "string",
          "example": "-135.33"
        },
        "posted": {
          "type": "string",
          "example": "2012-03-07T00:00:00.001Z"
        }
      }
    },
    "SandboxAccountImport": {
      "required": [
        "generate_auditors_view",
        "number",
        "IBAN",
        "label",
        "owners",
        "balance",
        "bank",
        "id",
        "type",
        "generate_accountants_view",
        "generate_public_view"
      ],
      "properties": {
        "generate_auditors_view": {
          "type": "boolean",
          "example": "true"
        },
        "number": {
          "type": "string",
          "example": "22"
        },
        "IBAN": {
          "type": "string",
          "example": "21234567890"
        },
        "label": {
          "type": "string",
          "example": "Account 1 at Bank 2"
        },
        "owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "balance": {
          "$ref": "#/definitions/SandboxBalanceImport"
        },
        "bank": {
          "type": "string",
          "example": "bank2"
        },
        "id": {
          "type": "string",
          "example": "account1"
        },
        "type": {
          "type": "string",
          "example": "savings"
        },
        "generate_accountants_view": {
          "type": "boolean",
          "example": "true"
        },
        "generate_public_view": {
          "type": "boolean",
          "example": "false"
        }
      }
    },
    "SandboxLobbyImport": {
      "required": [
        "hours"
      ],
      "properties": {
        "hours": {
          "type": "string",
          "example": "M-TH 8:30-3:30, F 9-5"
        }
      }
    },
    "SandboxBalanceImport": {
      "required": [
        "currency",
        "amount"
      ],
      "properties": {
        "currency": {
          "type": "string",
          "example": "EUR"
        },
        "amount": {
          "type": "string",
          "example": "1000.00"
        }
      }
    },
    "SandboxCrmEventImport": {
      "required": [
        "channel",
        "bank_id",
        "id",
        "customer",
        "category",
        "detail",
        "actual_date"
      ],
      "properties": {
        "channel": {
          "type": "string",
          "example": "Phone"
        },
        "bank_id": {
          "type": "string",
          "example": "bank1"
        },
        "id": {
          "type": "string",
          "example": "KIFJA76876AS"
        },
        "customer": {
          "$ref": "#/definitions/SandboxCustomerImport"
        },
        "category": {
          "type": "string",
          "example": "Call"
        },
        "detail": {
          "type": "string",
          "example": "Check mortgage"
        },
        "actual_date": {
          "type": "string",
          "example": "2017-09-19T02:31:05.000Z"
        }
      }
    },
    "SandboxAccountIdImport": {
      "required": [
        "id",
        "bank"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "account1"
        },
        "bank": {
          "type": "string",
          "example": "bank1"
        }
      }
    },
    "SandboxProductImport": {
      "required": [
        "name",
        "more_info_url",
        "super_family",
        "code",
        "bank_id",
        "meta",
        "category",
        "family"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "product 1"
        },
        "more_info_url": {
          "type": "string",
          "example": "www.example.com/index1"
        },
        "super_family": {
          "type": "string",
          "example": "sup fam 1"
        },
        "code": {
          "type": "string",
          "example": "prd1"
        },
        "bank_id": {
          "type": "string",
          "example": "bank1"
        },
        "meta": {
          "$ref": "#/definitions/SandboxMetaImport"
        },
        "category": {
          "type": "string",
          "example": "cat1"
        },
        "family": {
          "type": "string",
          "example": "fam1"
        }
      }
    },
    "SandboxLocationImport": {
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "example": "52.556198"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "example": "13.384099"
        }
      }
    },
    "SandboxLicenseImport": {
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "example": "pddl"
        },
        "name": {
          "type": "string",
          "example": "Open Data Commons Public Domain Dedication and License (PDDL)"
        }
      }
    },
    "SandboxAddressImport": {
      "required": [
        "city",
        "line_2",
        "state",
        "post_code",
        "county",
        "country_code",
        "line_3",
        "line_1"
      ],
      "properties": {
        "city": {
          "type": "string",
          "example": "Ashbourne"
        },
        "line_2": {
          "type": "string",
          "example": "Rosy Place"
        },
        "state": {
          "type": "string",
          "example": ""
        },
        "post_code": {
          "type": "string",
          "example": "WHY RU4"
        },
        "county": {
          "type": "string",
          "example": "Derbyshire"
        },
        "country_code": {
          "type": "string",
          "example": "UK"
        },
        "line_3": {
          "type": "string",
          "example": "Sunny Village"
        },
        "line_1": {
          "type": "string",
          "example": "5 Some Street"
        }
      }
    },
    "SandboxCustomerImport": {
      "required": [
        "name",
        "number"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "James Brown"
        },
        "number": {
          "type": "string",
          "example": "698761728934"
        }
      }
    },
    "SandboxBranchImport": {
      "required": [
        "name",
        "location",
        "bank_id",
        "id",
        "meta",
        "address"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Genel Müdürlük"
        },
        "location": {
          "$ref": "#/definitions/SandboxLocationImport"
        },
        "driveUp": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SandboxDriveUpImport"
          }
        },
        "bank_id": {
          "type": "string",
          "example": "bank1"
        },
        "id": {
          "type": "string",
          "example": "branch1"
        },
        "meta": {
          "$ref": "#/definitions/SandboxMetaImport"
        },
        "lobby": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SandboxLobbyImport"
          }
        },
        "address": {
          "$ref": "#/definitions/SandboxAddressImport"
        }
      }
    },
    "SandboxMetaImport": {
      "required": [
        "license"
      ],
      "properties": {
        "license": {
          "$ref": "#/definitions/SandboxLicenseImport"
        }
      }
    },
    "SandboxAtmImport": {
      "required": [
        "name",
        "location",
        "bank_id",
        "id",
        "meta",
        "address"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Ashbourne Atm 1"
        },
        "location": {
          "$ref": "#/definitions/SandboxLocationImport"
        },
        "bank_id": {
          "type": "string",
          "example": "bank1"
        },
        "id": {
          "type": "string",
          "example": "atm1"
        },
        "meta": {
          "$ref": "#/definitions/SandboxMetaImport"
        },
        "address": {
          "$ref": "#/definitions/SandboxAddressImport"
        }
      }
    },
    "SandboxDriveUpImport": {
      "required": [
        "hours"
      ],
      "properties": {
        "hours": {
          "type": "string",
          "example": "M-Th 8:30-5:30, F-8:30-6, Sat 9-12"
        }
      }
    },
    "SandboxDataImport": {
      "required": [
        "crm_events",
        "users",
        "products",
        "banks",
        "branches",
        "transactions",
        "accounts",
        "atms"
      ],
      "properties": {
        "crm_events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SandboxCrmEventImport"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SandboxUserImport"
          }
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SandboxProductImport"
          }
        },
        "banks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SandboxBankImport"
          }
        },
        "branches": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SandboxBranchImport"
          }
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SandboxTransactionImport"
          }
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SandboxAccountImport"
          }
        },
        "atms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SandboxAtmImport"
          }
        }
      }
    },
    "When": {
      "required": [
        "frequency",
        "detail"
      ],
      "properties": {
        "frequency": {
          "type": "string",
          "example": "YEARLY"
        },
        "detail": {
          "type": "string",
          "example": "LAST_DAY"
        }
      }
    },
    "PaymentAccount": {
      "required": [
        "iban"
      ],
      "properties": {
        "iban": {
          "type": "string",
          "example": "12345"
        }
      }
    },
    "ViewJsonV400": {
      "required": [
        "bank_id",
        "account_id",
        "view_id"
      ],
      "properties": {
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-40e3-a129-0b2bf89de9f0"
        },
        "view_id": {
          "type": "string",
          "example": "owner"
        }
      }
    },
    "EntitlementJsonV400": {
      "required": [
        "bank_id",
        "role_name"
      ],
      "properties": {
        "bank_id": {
          "type": "string",
          "example": "GENODEM1GLS"
        },
        "role_name": {
          "type": "string",
          "example": "CanQueryOtherUser"
        }
      }
    },
    "EmptyClassJson": {
      "required": [
        "jsonString"
      ],
      "properties": {
        "jsonString": {
          "type": "string",
          "example": "{}"
        }
      }
    },
    "PostConsentChallengeJsonV310": {
      "required": [
        "answer"
      ],
      "properties": {
        "answer": {
          "type": "string",
          "example": "12345678"
        }
      }
    },
    "MethodRoutingCommons": {
      "required": [
        "is_bank_id_exact_match",
        "method_name",
        "connector_name",
        "parameters"
      ],
      "properties": {
        "is_bank_id_exact_match": {
          "type": "boolean",
          "example": "false"
        },
        "method_name": {
          "type": "string",
          "example": "getBank"
        },
        "connector_name": {
          "type": "string",
          "example": "rest_vMar2019"
        },
        "method_routing_id": {
          "type": "string",
          "example": ""
        },
        "bank_id_pattern": {
          "type": "string",
          "example": "some_bankId_.*"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MethodRoutingParam"
          }
        }
      }
    },
    "PostResetPasswordUrlJsonV400": {
      "required": [
        "username",
        "email",
        "user_id"
      ],
      "properties": {
        "username": {
          "type": "string",
          "example": "jobloggs"
        },
        "email": {
          "type": "string",
          "example": "jo@gmail.com"
        },
        "user_id": {
          "type": "string",
          "example": "74a8ebcc-10e4-4036-bef3-9835922246bf"
        }
      }
    },
    "DynamicEntityFooBar": {
      "required": [
        "FooBar"
      ],
      "properties": {
        "FooBar": {
          "$ref": "#/definitions/DynamicEntityDefinition"
        },
        "dynamicEntityId": {
          "type": "string",
          "example": ""
        }
      }
    },
    "WebUiPropsCommons": {
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "webui_api_explorer_url"
        },
        "value": {
          "type": "string",
          "example": "https://apiexplorer.openbankproject.com"
        },
        "web_ui_props_id": {
          "type": "string",
          "example": ""
        }
      }
    },
    "PostUserAuthContextUpdateJsonV310": {
      "required": [
        "answer"
      ],
      "properties": {
        "answer": {
          "type": "string",
          "example": "12345678"
        }
      }
    },
    "CardAttributeJson": {
      "required": [
        "name",
        "type",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "OVERDRAFT_START_DATE"
        },
        "type": {
          "type": "string",
          "example": "DOUBLE"
        },
        "value": {
          "type": "string",
          "example": "2012-04-23"
        }
      }
    },
    "ConsentChallengeJsonV310": {
      "required": [
        "consent_id",
        "jwt",
        "status"
      ],
      "properties": {
        "consent_id": {
          "type": "string",
          "example": "9d429899-24f5-42c8-8565-943ffa6a7945"
        },
        "jwt": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiJ9.eyJlbnRpdGxlbWVudHMiOltdLCJjcmVhdGVkQnlVc2VySWQiOiJhYjY1MzlhOS1iMTA1LTQ0ODktYTg4My0wYWQ4ZDZjNjE2NTciLCJzdWIiOiIyMWUxYzhjYy1mOTE4LTRlYWMtYjhlMy01ZTVlZWM2YjNiNGIiLCJhdWQiOiJlanpuazUwNWQxMzJyeW9tbmhieDFxbXRvaHVyYnNiYjBraWphanNrIiwibmJmIjoxNTUzNTU0ODk5LCJpc3MiOiJodHRwczpcL1wvd3d3Lm9wZW5iYW5rcHJvamVjdC5jb20iLCJleHAiOjE1NTM1NTg0OTksImlhdCI6MTU1MzU1NDg5OSwianRpIjoiMDlmODhkNWYtZWNlNi00Mzk4LThlOTktNjYxMWZhMWNkYmQ1Iiwidmlld3MiOlt7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAxIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifSx7ImFjY291bnRfaWQiOiJtYXJrb19wcml2aXRlXzAyIiwiYmFua19pZCI6ImdoLjI5LnVrLngiLCJ2aWV3X2lkIjoib3duZXIifV19.8cc7cBEf2NyQvJoukBCmDLT7LXYcuzTcSYLqSpbxLp4"
        },
        "status": {
          "type": "string",
          "example": "INITIATED"
        }
      }
    },
    "ResetPasswordUrlJsonV400": {
      "required": [
        "reset_password_url"
      ],
      "properties": {
        "reset_password_url": {
          "type": "string",
          "example": "https://apisandbox.openbankproject.com/user_mgt/reset_password/QOL1CPNJPCZ4BRMPX3Z01DPOX1HMGU3L"
        }
      }
    },
    "ListResult": {
      "required": [
        "webui_props"
      ],
      "properties": {
        "webui_props": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebUiPropsCommons"
          }
        }
      }
    },
    "MethodRoutingParam": {
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string",
          "example": "url"
        },
        "value": {
          "type": "string",
          "example": "http://mydomain.com/xxx"
        }
      }
    },
    "DynamicEntityStringTypeExample": {
      "required": [
        "type",
        "example",
        "description"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "string",
            "number",
            "integer",
            "boolean"
          ]
        },
        "example": {
          "type": "string",
          "example": "James Brown"
        },
        "description": {
          "type": "string",
          "example": "description of **name** field, can be markdown text."
        }
      }
    },
    "DynamicEntityIntTypeExample": {
      "required": [
        "type",
        "example",
        "description"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "string",
            "number",
            "integer",
            "boolean"
          ]
        },
        "example": {
          "type": "integer",
          "format": "int32",
          "example": "698761728"
        },
        "description": {
          "type": "string",
          "example": "description of **number** field, can be markdown text."
        }
      }
    },
    "DynamicEntityFullBarFields": {
      "required": [
        "name",
        "number"
      ],
      "properties": {
        "name": {
          "$ref": "#/definitions/DynamicEntityStringTypeExample"
        },
        "number": {
          "$ref": "#/definitions/DynamicEntityIntTypeExample"
        }
      }
    },
    "DynamicEntityDefinition": {
      "required": [
        "description",
        "required",
        "properties"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "description of this entity, can be markdown text."
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/DynamicEntityFullBarFields"
        }
      }
    }
  }
}
